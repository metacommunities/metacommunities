"","repository_url","repository_name","type","created_at","payload_comment_body"
"1","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-02 21:44:26","What is the new way of doing offset? `jQuery.offset.setOffset($tip[0], $.extend({...}))`?"
"2","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-02 22:04:55","Not sure how you feel about this function. Seems like there could be something more generic hanging from `$.fn`."
"3","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-03 01:13:00","There's no need for a beforeEach block if this describe block only has one test. This inject block can be inside the it block below."
"4","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-03 01:14:57","It looks like the indentation here is non-standard."
"5","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-03 16:13:19","I just duplicate and existing test (can't remember which) and changed accordingly."
"6","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-03 20:15:43","> and all <code>*.html</code> files are for our documentation should be > and all <code>*.html</code> files for our documentation to make this a correct sentence."
"7","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 00:25:06","Please keep this list alphabetized."
"8","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 00:34:11","What about testing the example pages too (`/docs/examples`)?"
"9","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 00:37:36","I wanted to start with components - the idea here was benchmarking components. The example pages are entire pages with multiple components. Do you see value in benchmarking them too ?"
"10","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 00:39:01","Please also modify the JSCS task config accordingly."
"11","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 00:41:34","I believe you can leave out the version number and it will default to the latest available version."
"12","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 00:42:05","Shouldn't a platform also be specified?"
"13","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 00:44:06","Adding a corresponding gitignore entry for this tmp folder would be nice."
"14","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 00:46:54","/cc @mdo Your opinion? ^^^"
"15","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 00:50:15","Wanted to leave it open - this allows chrome to open in different platforms, giving us better data across platforms when people run it. or do you think that we are comparing versions, we need the platform should be a part of the standard environment ?"
"16","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 00:59:47","Nope, i have seen that it shuffles between 31 and 28 when I leave out the version number. Wanted to be safe as the perf numbers (from about:tracing and developer tools timelines) are available only in 31."
"17","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 01:17:45","Done"
"18","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 01:17:57","Done"
"19","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 01:23:55","Erm, so, you're saying that omitting the platform will make Sauce run it on all possible platforms?"
"20","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 01:44:14","Nope, omitting the platform (I think) will make it choose a platform at random."
"21","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 01:46:55","Then I'd say we should pin it to one or more popular platform(s)."
"22","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 01:54:02","Sounds good. Will Windows 8.1 and Mac OSX Mavericks work ?"
"23","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 02:01:08","Sounds good!"
"24","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 05:31:28","disables these rules just for this file"
"25","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 05:33:49","In general, it's hard to guarantee that shorthand will be used since the properties may be coming from places and later get combined together by the preprocessor in a resulting combination that happens to be shorthand-able. That's my take on it, anyway."
"26","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 07:15:09","Agreed on that take."
"27","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-06 07:15:17",":thumbsup:"
"28","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-07 08:00:45","Er, this effectively reverts your other pull request."
"29","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-07 08:25:15","@cvrebert I used the force to fix the mixup."
"30","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-07 08:27:48","Ensign, make it so!"
"31","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-07 17:37:45","Could you add a space before the open-paren, for stylistic consistency?"
"32","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-07 17:43:58","done"
"33","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-08 04:48:04","Fixed."
"34","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-08 04:55:01","Fixed (WRT this PR)."
"35","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-08 19:01:41","Is there a reason why you register the `generateGlyphiconsData` as a function and not load the file as a grunt task instead. I also see that you use readFileSync instead of grunt.file.read, if this was a grunt task. Should I do the same for https://github.com/twbs/bootstrap/pull/12112 ?"
"36","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-08 19:01:47","@axemclion So, can you update the browsers setting accordingly?"
"37","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-08 19:02:57","If this was grunt.registerTask, and loaded as `grunt.loadTasks(''docs/grnut.bs-*.js'), you could have used grunt.file.read. Is there a reason you follow this pattern instead of making this a grunt file? Should I also do the same for https://github.com/twbs/bootstrap/pull/12112?"
"38","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-08 19:28:42","No, no particular reason. Do it however you want."
"39","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-08 19:29:04","No, no particular reason."
"40","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-10 09:16:21","Just wondering if this call was necessary as render is called when viewValue differs from modelValue."
"41","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-10 09:17:18","Instead of setting it to $viewValue, I think this should be using the $modelValue."
"42","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-10 09:21:07","Ignore this comment, this looks good to me. I re-read it and understand the purpose of this. Was thrown off by the reset function name."
"43","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-10 09:24:00","Or just call ctrl.render (can't use `this` here heh) ?"
"44","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-10 09:26:06","Just thinking this doesn't need to be a public function, does it? User's can't override this either because it's called during initialization and never again."
"45","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-10 09:34:08","I think you missed this heh"
"46","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-10 10:35:03","We can, but IMO this way we tightly couple `reset` method with `render`. So if someone wants to override `render`, would probably need to override `reset` also."
"47","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-10 10:46:26","I see. Okay, your argument makes sense."
"48","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-10 10:47:46","Are you sure about the `$render` called by the `$setViewValue` function?"
"49","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-10 10:55:01","Argh, you're right, I'm misreading everything tonight heh."
"50","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-10 10:58:05","No worries, 4-eyes principle :-)"
"51","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-10 11:02:36","Hmm, you are right. Probably need to move the `$scope.range = ...` into the init function. I think it's useful to allow override of this function."
"52","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-10 17:41:01","Done."
"53","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-11 04:03:17","Why specify a class, only to repeat the intended HTML elements it applies to immediately thereafter?"
"54","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-11 04:03:58","Instead of this stack, simply use the prefixed `.embed-responsive-item` to avoid over specificity."
"55","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-11 04:04:19","Don't chain these two classes���just use `.embed-responsive-xxxx`."
"56","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-11 04:04:59","Don't chain these two classes���just use `.embed-responsive-xxxx`."
"57","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-11 04:05:19","Why specify a class, only to repeat the intended HTML elements it applies to immediately thereafter? Instead of this stack, simply use the prefixed `.embed-responsive-item` to avoid over specificity."
"58","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-11 19:39:25","@perry I am not keen of adding dummy CSS classes like `today`. You have to provide a nice visual hint for the default template also. Anyone can override the default template later."
"59","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-11 19:41:08","@perry You set the hours of the date objects to make the comparison. The altering of the date object may cause other problems. I would prefer if you used the `compare` functions."
"60","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-11 19:42:07","You can append this to the initial block of variables definitions."
"61","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-12 13:24:09","ok, will do it"
"62","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-12 13:28:19","Also, `.embed-responsive-item` should be out of `.embed-responsive` stack."
"63","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-12 13:29:08","Should be: `// Credit: SUIT FlexEmbed`"
"64","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-12 13:44:36","The class .embed-responsive-item could be use if you want to apply the style to another element that iframe, embed, object. Personally i don't have a use case and never use it for now, it was there in the code from @necolas i just leave it. I believe we should keep the stack of iframe, embed, object, the main use case of this it's to embed video from youtuve, vimeo... if you remove theses elements then you have to modify the code you grab from youtube, vimeo... Also in some case you cannot modify the attributes for 3rd party widget code. Your call i will update the PR with your feedback"
"65","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-12 17:12:42","It is probably best to use `.text-primary` or `.text-info` and not a button class since that would put to much (visual) focus on `today`, compared to the currently selected day."
"66","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-12 17:13:46","It's probably best to use `.text-primary` or `.text-info` and not a button class since that would put to much (visual) focus on `today`, compared to the currently selected day."
"67","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-13 20:53:43","It just worries me that this again, adds another evaluation and possibly causes some people to think that this itself is a dynamic attribute. However, this attribute is only evaluated once. If we really need to have this directive, I suggest leaving out the evaluation and just adding this watcher on the presence of this directive (so the usage would just be `<progress max='x' dynamic-max></progress>`) ."
"68","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-13 20:59:25","I see your point, but the problem is that for example in a `ng-repeat` you cannot mix dynamic progressbars with not. Also it's easier to specify it at runtime without the need to alter/compile the HTML."
"69","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-13 21:04:29","I understand that use case but I'm worried that supporting such possibly rare use cases will bloat up the bootstrap library with additional watchers and directives and more lines of code. I'm a little uneasy with supporting all these custom use cases that would add overhead for users that are just looking for something simple. When something is added on one component, users also expect it for other components. As such, one addition here means much more additions in the future. If we add another feature that's configurable, we then have to consider whether to add a dynamic watcher for it and/or an option that enables the dynamic watcher. However, I don't know how to measure if a use case is rare or common, so I'm quite at a loss for this."
"70","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-13 21:25:11","I agree that we don't know and cannot tell what is rare or not. The reason of adding this kind of directives is to keep the library fast and the organization of code simple. I disagree that the users that are using this library are looking for something simple and I am totally sure that many of them will not know or even bother to go to a wiki to search for a custom directive and manually add it to their application. Most of the times, they just pass and look for another alternative that supports it out of the box. So, IMO this is another discussion we should take in the near future (cc: @pkozlowski-opensource ) about how far we want to go :-) Now, in terms of consistency, I believe that all optional directives should be evaluated as boolean for the same reasons as above. If this directive makes the library bloated or unmaintainable I also agree to remove, but leaving out a feature for the shake of 15 LOC added is not possibly the best."
"71","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 06:45:42","`0` without the unit is preferable IIRC."
"72","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 09:48:04","Did this expect get dropped accidentally?"
"73","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 09:48:19","Same thing here"
"74","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 09:56:42","Add a `btn-default`."
"75","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 10:20:11","@Foxandxss I remember to have read this somewhere: We should use underscore only when we are going to assign that parameter to a variable that we want to have the original name. I mean, this makes no sense: `scope = _$rootScope_;` :-P"
"76","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 10:25:54","Fixed!"
"77","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 22:12:07","@jroxendal Is there a way that this function will be called on already active tab? What I mean do we really need the double check?"
"78","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 22:12:53","@jroxendal No need to check `onDeselect` since this is `angular.noop` by default."
"79","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 22:13:13","@jroxendal Same here for `onSelect`."
"80","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 22:13:48","@jroxendal Why do you need this addition for this change?"
"81","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 22:15:03","@jroxendal `execOrder` is not emptied again. So, it will be full of callbacks. How can you check?"
"82","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 22:15:45","@jroxendal No need to add spies, since you have custom code executed on each callback that you can check."
"83","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 22:17:11","@jroxendal You should add all 4 handlers for proper testing. `selectFirst` , `deselectFirst`, `selectSecond`, `deselectSecond`"
"84","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 22:18:36","@jroxendal I would expect a test like `expect(execOrder).toEqual([""deselect1"", ""select2""]);` tot est that no other callback is executed, or that no callback is executed twice."
"85","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 22:27:58","@Foxandxss BTW, can you elaborate on: we should use `scope` for directives and `$scope` for everything else"
"86","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 22:42:17","That is like a good question I wouldn't mind to discuss. In my experience through libraries / books / other people, it seems that tests for directives uses just `scope` and the rest `$scope`. But thinking it well, doesn't make THAT sense. Maybe we should apply the biggest issues here (the globar vars and some typos) and discuss on the other ""convention"" thread what convention we should follow so we don't have a convention per file."
"87","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 22:43:49","This library has a little bit of everything, $rootScope, $scope, and scope. More reason to use just one :P"
"88","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 22:49:42","I agree that we should use one convention for the tests, even if this doesn't seem like a high priority for me atm. About the `scope`/`$scope` convention, I am used when the scope is injected to use the `$` and when comes as an argument, ie the link function of the directive to use `scope`, but whichever approach works fine for me :-)"
"89","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 22:52:05","It is not a priority, but cleaning is always good and if the time pass, there will be more dirt. I don't mind to apply every convention we get on the tests."
"90","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-14 22:56:46","Agree & appreciate it, but without an automatic verification/correction tool I am afraid your effort will be in vain. Perhaps, you should first investigate available tools, like eslint or any other, to help with what you want to achieve here."
"91","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-16 22:26:23","This coercion bugs me a little as it causes the watcher to get triggered twice if isOpen is set to a truthy value that's not `true`. Say `isOpen = ""abc""`, first digest is set to `!!""abc""` which is `true`, watcher runs again because the isOpen changed from ""abc"" to `true`."
"92","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 06:25:11","no whitespace"
"93","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 06:28:59","Just a heads up�����in firefox jquery returns sub pixel values��� which means you can get 12.5�����which if you're expecting 12 on one side of the conditional will mess you up."
"94","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 06:31:23","i'd rather the api for this option except a `string || object`�����for example: ```js $('foo').tooltip({ viewport: { selector: 'body', padding: 10 } }) ```"
"95","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 06:31:46","saves us from having two options for 1 feature"
"96","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 06:32:13","can you realign all the values up like they were above, thanks!"
"97","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 06:33:14","these should be single line if's, also you should use `+=` syntax ```js if (delta.left) offset.left += delta.left else offset.top += delta.top ```"
"98","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 06:43:42","seems like you're duplicating a lot of the logic in `.getPosition`"
"99","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 08:29:14","I think you are right, `scope.isOpen = !!value` has to be removed. What about this: ```javascript scope.$watch('isOpen', function(value) { if ( !!value ) { accordionCtrl.closeOthers(scope); } }); ```"
"100","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 08:31:05","If I recall, `if (value)` is good enough, as JavaScript automatically does the !! coercion so the result is equivalent."
"101","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 08:33:08","Yeah, you are right, those are equivalent :-)"
"102","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 08:33:52",":smile: I'm happy about this refactor and more to come! :+1:"
"103","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 10:13:39","I was playing around with this and I realized an alternative maybe to use getter methods for these scope variables that need to fallback to default values if undefined. E.g. `getCloseText: function () { return scope.closeText || datepickerPopupConfig.closeText }` Of course, they can be shortened and generalized if they're the same keys on the scope and config objects. Just a suggestion / thought."
"104","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 10:15:42","I see. Is there an issue for this in AngularJS or is it the expected behavior?"
"105","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 10:21:35","Hm.. not sure what you mean. I was referring to the switch from $observe to this scope.template. This current change breaks the binding of the currentText (perhaps that's intended). However, if you do want to bind it, one solution is to use a getter method to fetch it from the scope. The getter method can enforce the defaults. This way, if the scope variable is changed to undefined, it still falls back to the datepickerPopupConfig value."
"106","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 10:26:01","I want to break the binding. No need to obsereve these changes in the default behavior. What I mean is that last night I tried: ```javascript scope.closeText = scope.closeText || datepickerPopupConfig.closeText; ``` in the tempate the `{{closeText}}` was evaluated again from the attribute, ie `null`, didn't get the default value. That's why I assign in a different variable. I hope this makes sense :-)"
"107","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 10:28:07","Ah okay, that `null` thing is a bit of a pain. A way around it is perhaps to use evalAsync but I think using a getter function would also solve that."
"108","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 10:30:59","Yeah, but this doesn't seem to be like the expected behavior, that's why I'm asking if you know if there is an issue for this in AngularJS."
"109","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 10:34:30","I believe this is expected behavior because using scope attributes (`scope: { closeText: '@' , .. }`) just adds watchers (with $observe) to the attributes. The watchers initial run is done asynchronously (similar to evalAsync, I think), so they have run yet at this point. I don't know if there's an issue on this and I'm about to head to sleep so I won't be able to dig it out for you heh."
"110","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 10:37:02","No problem :-)"
"111","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 19:33:56","You can remove the array to save 2 extra characters :-D"
"112","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-17 20:07:22","Thanks, changed it!"
"113","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-18 14:00:06","I hope this hard to read one is ok. Will see when I get able to run the tests."
"114","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-18 14:01:02","Also this line is hard to read, I hope it is not broken now."
"115","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-18 14:17:17","As the code is written now, this is necessary. On tab click, active is set to true. The active watch is then run, where this function is called and at this time two tabs may actually be active: the 'old' tab (which should be deselected) and the one we just selected. Only one of the deselect callbacks should be run, obviously. I didn't want to do a complete rewrite, so I left the active watch in the tabs directive in there. In order to avoid the check above, I believe that watch needs to go and some further refractoring to take place."
"116","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-18 14:17:36","oops. will fix."
"117","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-18 14:17:45","indeed."
"118","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-18 14:57:45","We are using 2 spaces for indent."
"119","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-18 15:35:24","Seems to be working fine in the tests."
"120","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-18 22:13:14","Yes, you are right about the 2 active tabs, so the double check is needed."
"121","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-18 22:16:58","As I said, you don't have to initialize this here, just leave the declaration. You have to do it inside the `beforeEach`, so each test does not mess with previous execution orders."
"122","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-18 22:17:18","So you have to add: `execOrder = [];`"
"123","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-18 22:18:34","Instead of creating multiple function to do the same, I would have just: ```javascript scope.execute = function(id) { execOrder.push(id); }; ```"
"124","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-18 22:19:55","So here you can have it like: ```javascript '<tab heading=""First Tab"" active=""actives.one"" select=""execute(\'select1\')"" deselect=""execute(\'deselect1\')""></tab>', ' <tab select=""execute(\'select2\')"" deselect=""execute(\'deselect2\')""></tab>', ```"
"125","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-18 22:21:55","I would break this into two tests and I would also change the comparisons to make it more readable. Something like: ```javascript it('should call select for the first tab', function() { expect(execOrder).toEqual([ 'select1' ]); }); it('should call deselect first, then select', function() { execOrder = []; // Select second tab titles().eq(1).find('a').click(); expect(execOrder).toEqual([ 'deselect1', 'select2' ]); execOrder = []; // Select again first tab titles().eq(0).find('a').click(); expect(execOrder).toEqual([ 'deselect2', 'select1' ]); }); ```"
"126","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 12:33:57","Shouldn't the other files have `X-UA-Compatible` too?"
"127","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 12:39:11","They have, this is template. :)"
"128","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 12:40:08","@XhmikosR You can use [this](https://github.com/blog/1705-expanding-context-in-diffs), it helps. :)"
"129","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 12:43:43","I already used that, but apparently I turned blind for a moment :P Sorry for the noise."
"130","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 12:48:27","No problem, that happensif you look many times at same or similar code. ;) 2014/1/19 XhmikosR <notifications@github.com> > In docs/getting-started.html: > > > <title>Bootstrap 101 Template</title> > > - <meta name=""viewport"" content=""width=device-width, initial-scale=1.0""> > > + <meta http-equiv=""X-UA-Compatible"" content=""IE=edge""> > > I already used that, but apparently I turned blind for a moment :P > > Sorry for the noise. > > ��� > Reply to this email directly or view it on GitHub<https://github.com/twbs/bootstrap/pull/12292/files#r8992041> > . > -- Zlatan Vasovi�� - *ZDroid*"
"131","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 14:22:40","@ZDroid Might be nitpicking, but now that we have multiple `meta`s in the template, I'd prefer adapting the example files' order for elements in `<head>`: `meta[charset], meta[http-equiv], meta[name], title, link[href], script` :)"
"132","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 14:28:21","@juthilo: I use almost that order too :)"
"133","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 14:51:00","@XhmikosR @juthilo Yup. That can be added, but this is really missing thing. Others are optional. Note: I like this order: * `meta[charset]` (should be always first) * `title` * `meta[name, content]` * `link[rel, href]` * other"
"134","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 14:54:25","ok"
"135","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 15:00:18","It's ""the issue"" singular. Though I'm not a native English speaker, but that was the reason behind this."
"136","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 15:28:53","*advanced optimizations* are plural. *advanced optimizations* should be fixed in clean-css."
"137","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 15:46:24","Well, I didn't mean that when I wrote the comment. I meant ""the issue""."
"138","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 16:15:28","It's ok. If that is case, comment should be: > turn advanced optimizations off until the issue is fixed in clean-css Agree?"
"139","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 16:19:53","Sure."
"140","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 16:25:36","Ok. Let's change it then. 2014/1/19 XhmikosR <notifications@github.com> > In Gruntfile.js: > > > @@ -195,7 +195,7 @@ module.exports = function (grunt) { > > compress: { > > options: { > > keepSpecialComments: '*', > > - noAdvanced: true, // turn advanced optimizations off until it's fixed in clean-css > > + noAdvanced: true, // turn advanced optimizations off until they're fixed in clean-css > > Sure. > > ��� > Reply to this email directly or view it on GitHub<https://github.com/twbs/bootstrap/pull/12295/files#r8992775> > . > -- Zlatan Vasovi�� - *ZDroid*"
"141","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 19:29:51","`href` isn't a valid attribute for `<button>`s."
"142","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 19:57:02","So, the requires were alphabetized. What's this new ordering?"
"143","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 19:59:24","This name change doesn't make sense to me."
"144","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 20:01:03","The BS prefix is to clarify that this is our own format and not https://github.com/asolove/lessdoc"
"145","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 20:02:17","Global (included in node), from external modules and internal (loaded from path), like in the most of programming languages. I can revert this part."
"146","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 20:03:16","It matches with glyphicons generation task, but I can revert this also. It's really minor. 2014/1/19 Chris Rebert <notifications@github.com> > In Gruntfile.js: > > > grunt.registerTask('build-raw-files', 'Add scripts/less files to customizer.', function () { > > var banner = grunt.template.process('<%= banner %>'); > > - generateRawFilesJs(banner); > > + generateRawJsFiles(banner); > > This name change doesn't make sense to me. > > ��� > Reply to this email directly or view it on GitHub<https://github.com/twbs/bootstrap/pull/12295/files#r8993712> > . > -- Zlatan Vasovi�� - *ZDroid*"
"147","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 20:06:18","Ah, okay, that makes sense."
"148","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 20:09:20","Yeah, please revert this change. The task literally generates `raw-files.js`, hence the current name."
"149","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 20:21:12","Yup. 2014/1/19 Chris Rebert <notifications@github.com> > In Gruntfile.js: > > > grunt.registerTask('build-raw-files', 'Add scripts/less files to customizer.', function () { > > var banner = grunt.template.process('<%= banner %>'); > > - generateRawFilesJs(banner); > > + generateRawJsFiles(banner); > > Yeah, please revert this change. > The task literally generates raw-files.js, hence the current name. > > ��� > Reply to this email directly or view it on GitHub<https://github.com/twbs/bootstrap/pull/12295/files#r8993762> > . > -- Zlatan Vasovi�� - *ZDroid*"
"150","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 20:48:31","This does the opposite of what your issue title says."
"151","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-19 20:49:55","Updated PR with correct title."
"152","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-20 20:28:40","Don't we have the need to test that `isopen` is false when the event is triggered?"
"153","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-20 20:53:24","This line is removed. This test is moved at line [67](https://github.com/angular-ui/bootstrap/pull/1616/files#diff-469b6578398445298d1ca4f2268b4389R67)."
"154","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-20 22:59:01","We usually uppercase controller names. 'TypeaheadController'"
"155","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-20 23:02:23","Possibly rename this to `closeDropdown`."
"156","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-20 23:02:37","This can call closeDropdown()."
"157","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-20 23:03:09","Same here, TypeaheadCtrl"
"158","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-20 23:06:00","Yeah, probably I should extract the ```javascript openScope.$apply(function() { openScope.isOpen = false; }); ``` into a `closeDropdown` function and call from the bindings."
"159","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-20 23:10:29","This should take in an argument `open` and check if arguments are 0: ``` if (arguments.length) { return $scope.isOpen = !!open; } else { return $scope.isOpen = !$scope.isOpen; } ``` This way it can handle an argument that sets the open explicitly and it also returns the actual value after the toggle."
"160","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-20 23:11:52","Just wondering, would there be a scenario where it was toggled open and then the element was somehow disabled afterwards? Would the dropdown stay open forever?"
"161","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-20 23:13:11","I guess perhaps that's okay. You can ignore this. Was just thinking about it."
"162","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-20 23:15:06","Sure, but developer has the means to close (ie `is-open`) before disable, if we wants to :-)"
"163","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-20 23:17:03","Yes, that's nice, but there was no use case for this. See test coverage report :-D Do you want to add as future proof solution in case someone wants to hook on the controller, right?"
"164","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-20 23:22:11","Nevermind, you don't need to uppercase this I guess since you're talking about an instance :-)"
"165","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-20 23:24:45","@bekos I like this use-case. Someone might want to make for example a button which opens a dropdown somewhere. Or perhaps there's a tutorial where it says ""When you click here, this dropdown will open!"" and you want to make sure it actually stays open and doesn't close if the user already clicked it."
"166","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-20 23:29:10","@ajoslin The `toggle` method is not exposed to the directive. It is only used by the dropdown toggler to do the toggling. I have added in the demo a button that does what you say, by just setting the `is-open` to true. I think @chrisirhc is wanting this in case another directive wants to use it."
"167","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-20 23:29:48","I will make the change anyway :-)"
"168","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-21 00:08:18","If the dropdown goes to an anchor. Anchor doesn't seems to have a `disabled` attribute. I think that the `!element.prop('disabled')` is not needed. Probably I am missing something."
"169","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-21 11:31:52","@Foxandxss It can be used with `ng-disabled` I assume."
"170","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-21 12:07:39","I tested it with `ng-disabled` but no. Seems that the way to disable it is only with the `bootstrap` class `disabled`."
"171","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-21 12:20:56","Hmm, you mean visually, right? The issue is that `dropdowToggle` may be used in whatever element and there could be some custom css to visually disable it.I see your point, but I think we should support the `disabled` property as a more clear indicator of the elements state."
"172","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-21 12:37:47","Totally agree with @bekos here. We either need to remove this class from the default template or, better yet, make use of on bootstrap class to highlight ""today""."
"173","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-21 13:03:39","If `dropdownToggle` can be used in any element we should modify the demo page. It says: `Simply put it on the <a> tag of the toggler-element, and it will find the nearest dropdown menu...` That for me is like it is only meant to use in an `a` tag. If so, `ng-disabled` doesn't work here. If you can actually plug the directive in more element where some of them could support `ng-disabled` (like a button), we should modify the demo to say that is not only usable in an anchor."
"174","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-21 13:05:25","Yeah, you are right. This `readme` is the old one, need to fix it also! Thx for the heads up :-)"
"175","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-21 13:24:26","Good, then you should add another test to test that a disabled... button can't trigger the dropdown. With that will will have more corners covered."
"176","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-21 13:25:47","Sure. Thx again."
"177","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-21 16:40:52","This test is kinda weird, it has a lot of code but actually it just use one element. Is that right? I didn't read this directive yet."
"178","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-21 17:37:16","I've noticed it too, maybe somebody accidentally added them? Although it's seems quite strange and it's not only in the test code."
"179","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-21 18:50:25","`grunt jshint` gives 'end of line has whitespace' error here"
"180","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-21 18:52:13","Thx, I will rebase soon."
"181","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-21 19:08:17","Use the [`expect(element).toHaveClass()` helper](https://github.com/angular-ui/bootstrap/blob/master/misc/test-lib/helpers.js#L5) for better error messages"
"182","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-22 18:02:46","IMO btn-primary instead of default is a nicer option, but it's just a subjective opinion, good fix anyway."
"183","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-22 21:28:39","I'm not sure what ""using any provided filters"" refers to here. This comment should make it clear that this basically does the opposite of the date filter."
"184","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-22 22:11:14","This return can be done on the top of the function just after all the var declarations. That way, it's clearer what's called during the filter and then the implementation details come later. (Function hoisting allows function declarations to come after their usage)"
"185","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-22 22:15:11","Looks like the indentation is wrong."
"186","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-23 00:10:00","""narrower **that** the physical paper size"" -> ""narrower **than** the physical paper size"""
"187","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-23 00:33:56","I'd also suggest: ""when resolving media queries when printing a webpage"" -> ""when resolving media queries while printing a webpage"""
"188","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-25 21:02:46","The else should be in the same line as the closing braces of the if (`} else {`)."
"189","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-25 21:03:09","Missing a space between `,'`."
"190","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-28 06:16:32","typo: ""preformance"" [sic]"
"191","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-28 06:18:34","I think this require and the SauceTunnel require should be within the `perf` task? They're not used within this task."
"192","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-28 06:21:30","I think you also need to run the `jekyll` task before the `gen_component_html` task since it relies on the Jekyll-generated `/_gh_pages/` directory?"
"193","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-28 06:23:22","I think it'd be better to do the deletion at the start of the `gen_component_html` task instead."
"194","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-29 14:01:58","There is already an `if` clause for `value`. No need to add a new one."
"195","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-29 20:35:48","These lines can actually be shortened to: $animate[value ? 'addClass' : 'removeClass'](self.$element, openClass);"
"196","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-30 11:34:41","If we are supporting an optional ngModel, this line seems to cry when we don't have any ngModel assigned. Probably there are more spots. Maybe we need a battery of tests for when there is no ngModel? :)"
"197","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-30 11:36:43","Yes, you are right. Let me land this and open a PR later for the optional ng-model fixes."
"198","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-30 19:49:59","Missing a comma"
"199","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-01-31 19:55:32","@ajoslin Shouldn't we specify the `.jshintrc` file?"
"200","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-01 12:58:56","Good point, added in latest commit (and no more errors now)"
"201","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-02 07:34:28","I'm onboard with trying to lint everything, but using brace expansion seems kinda messy. Maybe we could move the minified assets into a subdirectory so that simple `*.js` globbing would work here?"
"202","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-02 10:35:47","That was my original thought. But there is another solution: move `*.js` to the `docs/assets/js/src` and ignore `docs/assets/js/` when build Jekyll site (like for `docs/assets/js/vendor`), but keep the `*.min.js` ones."
"203","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-04 09:48:06","IE9 does not work anyway due to jszip's limitations."
"204","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-06 11:10:34","Aren't we using Capitalized names for controllers? :P"
"205","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-06 18:42:13","We do :-) Plus we should start prefixing those, but this is a separate story."
"206","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-06 19:47:59","Yeah, I was going to say that, that we could start prefixing (for the issue), won't hurt."
"207","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-06 21:26:51","@ZDroid: I'm not sure you can ignore that folder due to a Jekyll bug."
"208","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-06 21:55:27","Are you sure? I tested directory ignore locally and it worked, I didn't catch any bug."
"209","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-06 22:06:48","What exactly did you add in the exclude array in _config.yml?"
"210","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-06 22:35:08","You should move source js files to `src/` then exclude `src`, like `vendor`."
"211","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-06 22:46:07","You can inject just `numberFilter` instead."
"212","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-06 22:47:22","You can do it with plain javascript like this: `+percent.toFixed(1)`"
"213","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-06 22:47:49","You should create another test instead of altering the current ones."
"214","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-07 01:38:40","first letter should be capitalized"
"215","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-07 01:39:15","add a space before the brace"
"216","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-07 07:37:37","It shouldn't be too hard to separate the minified JS files. But we really need to stop generating raw-files.min since it's being minified again."
"217","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-07 07:43:57","There's no `raw-files.js`. `raw-files.min.js` isn't truly minified, its just not human-readable."
"218","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-07 07:49:11","That's what I meant. I know it's not truly minified but it is not used since it's just concatenated and minified to customize.min.js."
"219","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-07 09:33:53","Fixed with caps but I didn't add prefix heh"
"220","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-07 17:46:08","Just for my understanding. If you would use a `;` in that line here would that break any of those 2 usage variants?"
"221","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-07 18:01:06","That makes sense, glad you pointed that out. I didn't know where you were talking about, so we are good now. I will update my PR to have ```;```'s instead of comma's."
"222","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-08 21:21:28","These should be indented 2 spaces, per Bootstrap's code style."
"223","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-08 23:48:54","maybe sort these alphabetically"
"224","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-09 06:31:53","@mdo Um..."
"225","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-09 08:58:15","yup, I missed `eqnull` xD"
"226","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-09 22:08:35","I don't suppose this could fail? If so maybe we should show an message in that case too."
"227","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-09 22:12:40","Should use Grunt's logging API instead of console.log."
"228","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-10 07:06:11","Maybe ""Error creating file <filename>.""? Current error message is kinda misleading."
"229","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-10 07:09:18","Hm hm. But we already have raw-files pre-built, so 'not created' can't happen. 2014-02-10 8:08 GMT+01:00 Chris Rebert <notifications@github.com>: > In grunt/bs-raw-files-generator.js: > > > @@ -28,5 +29,12 @@ module.exports = function generateRawFilesJs(banner) { > > banner = '' > > } > > var files = banner + getFiles('js') + getFiles('less') + getFiles('fonts') > > - fs.writeFileSync('docs/assets/js/raw-files.min.js', files) > > + var rawFilesJs = 'docs/assets/js/raw-files.min.js'; > > + fs.writeFileSync(rawFilesJs, files); > > + if (fs.existsSync(rawFilesJs)) { > > + grunt.log.write('File ' + rawFilesJs.cyan + ' created.'); > > + } > > + else { > > + grunt.log.error('File ' + rawFilesJs + ' doesn\'t exist.'); > > Maybe ""Error creating file .""? Current error message is kinda misleading. > > ��� > Reply to this email directly or view it on GitHub<https://github.com/twbs/bootstrap/pull/12672/files#r9575465> > . > -- Zlatan Vasovi�� - *ZDroid*"
"230","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-10 07:36:19","That's a valid point @ZDroid :P LGTM. Ideally I'd like to skip creating that file since it just gets minified later on."
"231","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-10 07:55:08","Yay. In that case we should just make raw-files as a string, nothing more. 2014-02-10 8:38 GMT+01:00 XhmikosR <notifications@github.com>: > In grunt/bs-raw-files-generator.js: > > > @@ -28,5 +29,12 @@ module.exports = function generateRawFilesJs(banner) { > > banner = '' > > } > > var files = banner + getFiles('js') + getFiles('less') + getFiles('fonts') > > - fs.writeFileSync('docs/assets/js/raw-files.min.js', files) > > + var rawFilesJs = 'docs/assets/js/raw-files.min.js'; > > + fs.writeFileSync(rawFilesJs, files); > > + if (fs.existsSync(rawFilesJs)) { > > + grunt.log.write('File ' + rawFilesJs.cyan + ' created.'); > > + } > > + else { > > + grunt.log.error('File ' + rawFilesJs + ' doesn\'t exist.'); > > That's a valid point @ZDroid <https://github.com/ZDroid> :P > > LGTM. Ideally I'd like to skip creating that file since it just gets > minified later on. > > ��� > Reply to this email directly or view it on GitHub<https://github.com/twbs/bootstrap/pull/12672/files#r9575730> > . > -- Zlatan Vasovi�� - *ZDroid*"
"232","https://github.com/ussher/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-11 03:02:30","Wont this make it necessary to update any bootstrap.css files that come out. not just copy+paste?"
"233","https://github.com/ussher/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-11 03:04:45","Cant check it out now but im pretty sure there was a reason these were put in the header instead of here. Putting them in the location they are at in the header ensures that they are the last called so have higher priority. Will need to check it out to confirm."
"234","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-11 06:33:10","Wrong closing tag here."
"235","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-11 06:35:07","Actually, all the instances of this code have mismatched tags."
"236","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-11 09:45:11","Perhaps `attrs.uncheckable !== undefined || !element.hasClass(buttonsCtrl.activeClass)` should work to shorten this further."
"237","https://github.com/ussher/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-11 15:50:39","The reset (which is normalize in BS3) needs to be called first, with everything else after it. Resetting after all module css will not work properly. Jamroom css_href and css_embed should be able to override all previous styles - this is possible with the current hard coded links to the stylesheets - you need to add your css rules to the javascript footer function by closing the script tag and then reopening it after adding the style tag containing your rules."
"238","https://github.com/ussher/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-11 15:52:16","Yes, if you use the icons and are unable to override rules."
"239","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-12 14:27:59","@duncanbeevers This `if` keeps confusing me every time I read it :-) The reason is that you check the `viewValue` but this is dependent on the `active` state of the button. Why do you think of something like: ````js var isActive = element.hasClass(buttonsCtrl.activeClass); if (!isActive || angular.isDefined(attrs.uncheckable)) { var viewValue = !isActive ? scope.$eval(attrs.btnRadio) : null; .... } ````"
"240","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-12 17:03:40","@bekos I see what you're saying. I'm relying on the implicit `undefined` from the var declaration, and the variable name isn't the best. What do you think of this? ```javascript element.bind(buttonsCtrl.toggleEvent, function () { var isActive = element.hasClass(buttonsCtrl.activeClass), shouldUpdateValue = !isActive || angular.isDefined(attrs.uncheckable); if (shouldUpdateValue) { var newValue = isActive ? undefined : scope.$eval(attrs.btnRadio); scope.$apply(function () { ngModelCtrl.$setViewValue(newValue); ngModelCtrl.$render(); }); } }); ```"
"241","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-12 17:38:36","@duncanbeevers I would not create another variable, ie `shouldUpdateValue`, just to use it once in an `if` statement 1 line below. If this seems a bit magic, it's better to add a comment, rather than trying to clarify things with variable names. About the `undefined`, I think the tests pass even if you use `null`, but I am not sure :-). If yes and the `undefined` has a special meaning, you should provide another test for this."
"242","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-12 18:02:29","@bekos Alright, I've consolidated the locals to just `isActive` and inlined the `shouldUpdateValue` and `newValue` expressions. It all still seems to read pretty easily. I think the tests will pass with anything falsey, which is specific enough for me. I'll leave it as-is. If someone needs to change this, I'll revisit the tests then. I like the `null`, and have changed the implementation to use it instead of `undefined`."
"243","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-12 23:15:53","maybe add parens to clarify operator binding?"
"244","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-13 06:34:05","Yes, they may help with code readability, I'll add them. Note: they won't change code functionallity. :) 2014-02-13 0:19 GMT+01:00 Chris Rebert <notifications@github.com>: > In docs/assets/js/customizer.js: > > > for HTML5 blobs. Because of this your file will be downloaded with the name <code>""untitled""</code>.\ > > However, if you check your downloads folder, just rename this <code>""untitled""</code> file\ > > to <code>""bootstrap.zip""</code> and you should be good to go!') > > - } else if (!window.URL && !window.webkitURL) { > > + } else if (!window.URL && !window.webkitURL || !new Blob()) { > > maybe add parens to clarify operator binding? > > ��� > Reply to this email directly or view it on GitHub<https://github.com/twbs/bootstrap/pull/12666/files#r9690993> > . > -- Zlatan Vasovi�� - *ZDroid*"
"245","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-13 16:38:46","This isn't quite compilation per se, so how about just `core` (and similarly, `theme`)?"
"246","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-17 09:59:57","This should also be separate."
"247","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-18 07:40:31","Instead of using setTimeout, use $timeout with false for invokeApply."
"248","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-19 17:01:20","BrowserStack has been axed."
"249","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-19 17:04:19","Is there a reason to explicitly set the tunnel identifier? (And both to the same one?)"
"250","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-19 18:52:07","The sauce-tunnel module sets a tunnel identifier is none is specified. Sauce will only let configurations with the same tunnel-identifier pass through the tunnel, so we have to explicitly specify it here so that sauce-tunnel does not set an identifier automatically."
"251","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-21 14:12:20","@duncanbeevers The second button still has the `btn-radio-uncheckable`."
"252","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-21 14:12:42","@duncanbeevers Same here."
"253","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-21 23:19:41","Should this block be removed still?"
"254","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-22 00:11:54","It still gets generated in the resulting CSS: https://github.com/twbs/bootstrap/pull/12670/files#diff-6972cbb37f0ec48771217d4915ea7e6fL4500"
"255","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-22 01:12:55","Ah, thought I was looking at that. Thanks bb <3."
"256","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-22 11:13:28","Are you sure about ""automagically""? Is that on purpose or did you mean ""automatically""?"
"257","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-22 11:15:59","Maybe you could update less/.csscomb to reflect this?"
"258","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-22 12:20:02","Not on purpose, although it has a nice twist to it. :) Will fix it."
"259","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-22 12:22:43","What would need to be updated? As far as I can tell .csscomb.json only contains properties, not values and all -o prefixed properties used are already in there."
"260","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-22 12:26:45","On the other hand. It's used (on purpose?) in more places throughout the docs. See [line 2890 of css.html] (https://github.com/twbs/bootstrap/blob/master/docs/css.html#L2890) for an example. Will leave it for now until I get more feedback on this."
"261","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-22 12:34:51","Might be on purpose then. Wait for feedback just to be sure."
"262","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-22 12:35:35","I meant if it was something missing to get the order right but i guess that's how autoprefixer does it."
"263","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-22 21:36:12","Hah, I'm a fan of the automagic :)."
"264","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-23 12:06:16","Nitpicking, but if we don't use relative paths elsewhere, you should follow that here too."
"265","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-24 08:29:42","Does `$timeout(function() { element[0].focus(); }, 0, false);` work? Was there a reason for picking the values 1 and `true` (invokeApply = true)?"
"266","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-24 18:23:35","Here it uses the dateFilter service to format the ""Date typed (string)"" in the format the user is expecting."
"267","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-24 18:24:39","Here it split the date that is in the String format check if it was typed like 99/99/9999 or 99-99-9999 or 99.99.9999 so it can recreate it in a new date."
"268","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-24 21:28:30","I'm not sure I understand what you mean. Can you provide an example?"
"269","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-24 21:32:57","I checked and it does work with 0 and false (see http://plnkr.co/FimbQhGviK5dDVarLaRy). I'll give you another commit."
"270","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-26 10:52:14","No need to change this into a one-liner, though."
"271","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-26 18:08:44","going away in JSHint 3"
"272","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-26 18:09:55","going away in JSHint 3: https://github.com/mdevils/node-jscs/issues/102"
"273","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-26 18:10:08","going away in JSHint 3: https://github.com/mdevils/node-jscs/issues/102"
"274","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-26 18:11:07","going away in JSHint 3: https://github.com/mdevils/node-jscs/issues/102"
"275","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-27 15:22:24","@mikesherov: I will report this upstream if need to but with `requireParenthesesAroundIIFE: true` we get ``` Wrap immediately invoked function expressions in parentheses at js/affix.js : 8 | 9 | 10 |+function ($) { ---------^ 11 | 'use strict'; 12 | ```"
"276","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-28 01:27:45","Right, because that IIFE isn't wrapped in parens, as the option requires. It looks like in your JSHint config, `immed` was only part of validation for the files in the `grunt/` directory. It looks like you're trying to apply this config in JSCS, however, to all files. prefixed IIFE's `+function(){}()` are violations."
"277","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-02-28 07:48:55","Duh, you are right. I'll take care of this later."
"278","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-01 16:05:07","Isn't `client` unused here and in line 137 and 147?"
"279","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-01 21:02:32","Why do you need to recreate this?"
"280","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-01 21:02:57","You should not add an extra class to the template just for testing purposes."
"281","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-01 21:19:15","I'm using them in the tests."
"282","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-01 21:19:25","Ok, sure."
"283","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-01 21:21:09","There is already an `assignElements` and a `assignButtonBar` that you can reuse probably."
"284","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-01 21:37:42","You're right, cool."
"285","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-07 08:41:52","Isn't strikethrough usually one word?"
"286","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-07 08:42:37","Yup!"
"287","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-08 10:47:12","@BenjaminCh You don't pass this variable to the timepicker. How can it know about the changes?"
"288","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-08 10:48:02","@BenjaminCh You don't test that the arrows are visible by default."
"289","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-08 10:48:46","@BenjaminCh Shouldn't exist a LOC to check the user's value and otherwise get the default?"
"290","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-08 18:17:43","@bekos This is certainly not perfect, but what do you mean by a ""LOC"" ?"
"291","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-08 18:18:44","A line of code inside the timepicker's controller."
"292","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-09 02:44:40","no"
"293","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-10 06:34:35","Need only one new line."
"294","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-10 06:34:58","Nuke the empty line"
"295","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-10 06:35:10","Needs a new line."
"296","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-10 06:43:45","Since the file is now much smaller and more streamlined, I question whether we still need a TOC."
"297","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-10 06:47:57","Perhaps we should consolidate all of the deprecation notices here into one ""this entire file is deprecated"" notice?"
"298","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-10 06:49:30","Dig that."
"299","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-11 17:31:14","Unnecessary backslash?"
"300","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-11 17:33:12","`-max` doesn't seem too clear, IMHO. Maybe `.screen-sm-only` ?"
"301","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-11 17:42:17","@cvrebert I made a comment about that in the commit - but maybe it's worth adding a comment in the file itself. That is needed to escape the ' which for some reason causes a parsing error in that comment once you use a mixin with a ruleset. Other option would be to have bad punctuation and just drop the ' altogether."
"302","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-11 17:43:25","Yeah I don't think screen is that great either as it actually isn't representing a query that explicitly targets screen. I definitely think we should iron out the names before merging this. They could be better."
"303","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-11 17:44:58","Let's report that upstream to the Less folks���we make extensive use of apostrophes :grin:."
"304","https://github.com/Syonet/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-12 13:58:12","Tenta utilizar o hex"
"305","https://github.com/Syonet/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-12 14:01:06","D�� pra usar a sintaxe :extend( .syo-table all ) do LESS; dessa forma o CSS final vai ficar beeeem menor..."
"306","https://github.com/Syonet/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-12 14:02:03","Para fins de documenta����o: http://lesscss.org/features/#extend-feature"
"307","https://github.com/Syonet/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-12 14:30:13","A identa����o neste bloco todo t�� com 4 espa��os"
"308","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-13 17:45:27","Why not just use tilde like the rest?"
"309","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-14 04:41:13","this can't be merged because this is a breaking change for some folks"
"310","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-14 04:42:57","we added that because the ""collapsed.in"" selector was to generic and people were opening a bunch of issues about nesting them etc"
"311","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-14 04:57:10","I don't understand this style change���"
"312","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-14 04:58:19","spacing looks weird and the `=` aren't lined up��� so it doesn't really match the style of these plugins"
"313","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-14 05:00:16","why new lines here?"
"314","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-14 05:01:34","why not just reassign then on jquery as like `$.fn.bootstrapAffix` ? that way the api stay the same?"
"315","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-14 05:04:26","could you change these to: ```js var old = $.fn.affix $.fn.affix = Plugin $.fn.affix.Constructor = Affix ```"
"316","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-14 05:08:26","```js var type = e.which == 37 ? 'prev' : e.which == 38 ? 'first' : e.which == 39 ? 'next' : e.which == 40 ? 'last' : null ```"
"317","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-14 05:10:06","i lol'd"
"318","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-14 05:10:22","i respect your `&&` game"
"319","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-14 05:21:09","i like the idea here but `$this.parents('.alert')` returns a list of `.alerts`�����i think youll want to limit that��� so something like `$this.parents('.alert').first()`"
"320","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-14 05:34:55","this is what we do other places��� ```js selector = $this.attr('href') selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') //strip for ie7 ```"
"321","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-14 06:47:06","you are still able to simplify this :P"
"322","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-15 19:55:40","What's up with changing the color here?"
"323","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-16 00:51:28","My Bad :("
"324","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-16 03:41:18","Shouldn't this be just `0`?"
"325","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-16 05:00:28","How about getting rid of `recursive` and do this? ```js var globExpr = ((type === 'less') ? '/**/*' : '/*'); ```"
"326","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-16 05:09:02","I personally prefer the extra clarity."
"327","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-16 05:48:17","Yeah it should, sorry about that. Converted all the values to percentages and the linter didn't pick up on it. I'll fix this up. I wonder if it can be removed completely...?"
"328","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-16 07:47:41","It's your call, but there's a similar case a few lines bellow for fonts where no extra var is used there. :)"
"329","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-16 07:49:36","I don't think CSSLint checks for that at all. You mean remove the property completely? That I don't know, one would need to make sure it's not overwritten from somewhere else..."
"330","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-16 08:58:41","Turns out it is being overwritten somewhere else. Didn't work too well, so I just removed the percentage sign and committed."
"331","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 02:11:26","yep��� you could rewrite this whole block like this: ```js var $carousel = $(document.activeElement) $carousel .carousel('pause') .carousel( /next|prev/.test(type) ? type : type == 'first' ? 0 : nItems - 1 ) .carousel('cycle') e.preventDefault() ```"
"332","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 02:14:08",":muscle: flex"
"333","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 02:19:10","`!that.options.cache`"
"334","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 02:19:18","chain"
"335","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 02:25:12","should you check for `this.options.viewport` first? ��� `this.options.viewport && this.options.viewport.selector`"
"336","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 02:47:32","instead why not always just `empty()`?"
"337","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 02:52:49","I'd change this to `$btn =$('<div class=""zero-clipboard""><span class=""btn-clipboard"">Copy</span></div>') ` that way you can just append the class below"
"338","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 02:53:07","previous.before($btn.addClass('with-example'))"
"339","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 02:54:03","new ZeroClipboard($btn)"
"340","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 02:54:23","yep"
"341","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 02:54:33","client"
"342","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 07:24:28","Can't we eliminate `$targets` altogether?"
"343","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 07:26:05","The query doesn't target 'screen' media but it uses the `@screen-*` variables as reference. I also think, that the naming is misleading. `.screen-sm()` should cover only small screens while `.screen-sm-max()` should cover small screens and below. There should also be a third mixin `.screen-sm-min()` which covers small screens an above. Same for medium screen queries... I made a [revision of my previous gist](https://gist.github.com/simbo/9427230) to clarify what i mean. I think you just adopted the names from the first dirty version. This revision also contains some `.screen()` mixins to quickly assign rules to multiple media queries."
"344","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 07:28:53","Yes, but I was waiting for feedback from @fat. Maybe this was meant to be used and it's a mistake."
"345","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 08:35:56","As seen in https://github.com/angular/angular.js/commit/43a2f3d0bf435e3626cd679caff4281cfb3415bd , a better way to fix this is to use `[\s\S]+` to include both whitespace and non-whitespace character classes."
"346","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 10:21:54","Use === instead of == please."
"347","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 12:27:33","fixed"
"348","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 18:08:57","Maybe use `language` instead of `translation` as a loop variable?"
"349","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 19:20:53","I feel like we'd have to add a bunch more special cases and/or support for the user adding their own special cases... :scream:"
"350","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 19:28:09","These two classes are the only ones I've really seen cause a problem as far as base bootstrap and this solution is concerned. User special cases should be handled via the `show.bs.modal` event."
"351","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-17 20:52:31","Sounds good to me. Pushing up in a minute."
"352","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-18 01:13:13","I've changed this around to support a null viewport if you dont want it to be constrained."
"353","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-18 13:32:39","@cvrebert do you think that the static-nav cases should handled elsewhere? The change from inspecting `window.innerHeight` to checking `window.innerWidth` to denote the presence of scrollbars should fix the solution that's already out there while leaving the `navbar-fixed-[whatever]` alone (i.e., leaving them shifting right). Would this pull request be better to just address the issue with IE10/11? I'm really eager to see some fix roll so that I can update my own codebase."
"354","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-20 07:37:57","Break this onto separate lines and rebase into a single commit please?"
"355","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-21 02:26:44","you'll want to line all the `=` signs up above this declaration. also you can clean up this ternary ```js ��� this.$element = $(element) this.options = this.getOptions(options) this.$viewport = this.options.viewport && $(this.options.viewport.selector || this.options.viewport) ```"
"356","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-21 02:28:55","```js var orgPlacement = placement var $parent = this.$element.parent() var parentDim = this.getPosition($parent) ```"
"357","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-21 02:29:28","line up the `:`'s"
"358","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-21 02:30:14","line up operators too"
"359","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-21 02:31:40","line up `=`"
"360","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-21 02:34:05","`{ top: 0, left: 0 }`"
"361","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-21 02:41:00","it looks like you could do something like��� ```js var rightEdge = pos.left + actualWidth + viewportPadding if (rightEdge > viewportDimensions.width) { delta.left = viewportDimensions.left + viewportDimensions.width - rightEdge } ```"
"362","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-21 02:41:28","i think something like that in this logic would make it a bit more clear what was going on (also, probably come up with better var name)"
"363","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-21 18:29:35","Offsets for all edges for clarity."
"364","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-23 07:52:52","Extract this code into a new function perhaps?"
"365","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-23 08:07:17","@cvrebert: check the refactor patch. If that's ok with you, I'll squash those two."
"366","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-24 16:07:45","LESS requires parentheses around arithmetic expressions; this isn't compiling correctly currently."
"367","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-24 20:43:30","""is triggered"""
"368","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-24 20:45:43","My bad, thanks :)"
"369","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-25 03:01:16","> Would this pull request be better to just address the issue with IE10/11? that's just what i was going to ask. The fixed problem is actually just a rendering bug with chrome (asfaik) ��� works fine in firefox, etc."
"370","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-26 03:28:04","yeap, Thanks for your inputs. I should learn to use regexpr more often, makes life a lot easier. ;) You can see updated code at my new PR #13185. Sorry for creating a new PR, though, I've had a hard time when rebase."
"371","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-26 06:15:07","Capitalize ""b"""
"372","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-26 06:19:22","I assume this should be capital b too :)"
"373","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-26 06:31:15","So, should I capitalize the descriptions of the other parameters too? I had used lowercase to be consistent with them."
"374","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-26 06:36:46","Valid point. I say follow what it's currently used."
"375","https://github.com/econsultancy/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-26 10:35:24","Yeah, the latter two are not used, I was going to, then didn't in the end. So I thought it was nice to leave them in for reference and future usage."
"376","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-26 17:32:25","Wow, I didn't think of that. Good idea."
"377","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-27 16:40:06","Please use `//`-style comments for consistency with the rest of the file."
"378","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-28 05:33:28","1. I would just use tilde here. 2. css-clip is in dependencies and devDependencies; one should be enough. 3. you downgraded grunt to ~0.4.3; why is that?"
"379","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-28 05:46:16","(2) & (3): Oops. The conflicts during the rebase didn't get resolved correctly."
"380","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-28 07:28:08","?"
"381","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-28 07:30:09","Well, you can check the generated minified file; there's no reason for 2 newlines after the license header."
"382","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-28 07:32:35","On a side note, shouldn't we have the jquery check there too like in dist files?"
"383","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-28 07:38:20","Fair enough. And yes, we ought to..."
"384","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-28 07:40:19","Done. Let me know if there's something else."
"385","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-28 07:47:01","Maybe update .csscomb.json to handle these better?"
"386","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-30 00:10:00","Use 2-space indents."
"387","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-03-30 21:24:38","We're trying to centralize all the grunt tasks under the `/grunt/` folder. If you could move this file accordingly, that'd be great."
"388","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-01 02:47:27","@cvrebert Here is the Auth. Another thing I noticed is that iriscouch seems to get unresponsive at times. Do you have the same problems?"
"389","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-01 02:56:21","Great, thanks. > Do you have the same problems? Haven't used iriscouch enough to notice."
"390","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-01 04:26:29","could you line these lines up with the first line��� so the `?` etc are all lined up? would appreciate it :)"
"391","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-02 03:35:10","Could be shortened to `return self.toggleElement && self.toggleElement[0]`."
"392","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-02 03:39:13","This won't work in the case where the target element is a child element of the toggle element. The toggle element could be a container that contains children. The event target might be a child element."
"393","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-03 00:25:46","@fat You mean like this? Of course I can do this. ``` var type = e.which == 37 ? 'prev' : e.which == 38 ? 'first' : e.which == 39 ? 'next' : e.which == 40 ? 'last' : false ```"
"394","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-03 13:59:39","@chrisirhc I'm with you. How do you want to handle this? Either loop through openScope.getToggleElement().children to match the event target inside closeDropdown of the dropdownService. Or we could loop through the children inside the dropdownToggle link function and set a data item, which we can then check inside the click event of dropdownService? The latter option sounds better to me as we would then not need to loop through the children on each click."
"395","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-04 02:17:32","Looping through children can get tricky because you need to go through siblings etc. (tree traversal). Instead of doing that, you can do the reverse and check if target element or any its ancestors is the toggle element. That way, you only go upwards in the tree and you're guaranteed to stop at the root element."
"396","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-07 03:39:11","Also, indentation is incorrect."
"397","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-09 05:48:59","yes please, thanks"
"398","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-09 05:51:34","this is kinda expensive��� basically on all keydowns we now have to query the entire dom��� checking every elements for a data attribute��� not the quickest expression. might be better to have this in the carousel instance���"
"399","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-10 09:48:37","@fat How about ``` $('[data-ride=""carousel""]').on('keydown', function (e) { ```"
"400","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-10 10:17:11","Is this intentionally global?? ```` group ```` is not declared"
"401","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-10 10:17:51","Same as above"
"402","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-13 17:53:52","`isUp` is not used."
"403","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-13 17:54:07","No need to call again."
"404","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-13 17:54:42","argument does not matter, so no need to test twice the same thing."
"405","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-13 17:55:48","IMO you don't need to create a function just to wrap this one command."
"406","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-13 17:56:20","injections are not used."
"407","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-13 17:57:01","No need to create another `describe` for the default case. Just add a test above."
"408","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-13 17:57:22","Same things as above."
"409","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-13 17:57:33","Same."
"410","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-16 03:38:06","I think `$(window)` might make more sense added to affix's defaults�����rather then doing this check here."
"411","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-16 03:38:37","also `this.$window` doesn't make much sense if the target isn't the window��� should probably rename that to `this.$target`"
"412","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-16 03:38:50","should be window not null"
"413","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-16 03:39:21","target should be selector, node, or jquery element"
"414","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-16 04:42:55","Can't this be simplified to: `e && e.which === 3` ?"
"415","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-16 04:51:05","yep"
"416","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-16 04:53:04","good catch, thanks :)"
"417","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-16 16:31:42","Typo: ""classeses"""
"418","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-16 16:33:42","Missing one additional leading space on this line."
"419","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-19 16:50:47","@JoeChapman Nice catch!"
"420","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-22 00:47:16","I think we'd want to move the media query inside the `.carousel` block so as to improve mixin-ability."
"421","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-23 10:51:07","Good point. Moved the media query into the `.item` class instead as I wasn't modifying the `.carousel` class. Can't check this just yet as Travis is throwing an error unrelated to my commit."
"422","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-25 07:59:30","So then there's no point in having the `@gutter` parameter."
"423","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-25 08:19:25","True. Using the system in the following way ``` .module { .make-xs-column(12, 10px); .make-sm-column(6, 20px); .make-md-column(3, 30px); } ``` Did not make sense before the patch. It would just output and use the last given gutter (30px). If somebody would want to use a custom gutter width she or he could do the following: ``` .module { .make-column(30px) .make-md-column(3); } ``` We can remove the gutter params for the make-[bp]-column mixins then, right?"
"424","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-25 23:18:30","could you simplify this comment to just: ""yes, ""slid""."
"425","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-25 23:19:05","or `// ~**~slid~~*`"
"426","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-25 23:21:03","also maybe just reuse `e` var?"
"427","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-25 23:21:30","actually no slidEvent is better, maybe change `e` above to be `slideEvent`"
"428","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-25 23:21:53","and the var names will be enough to ditch all the comments?"
"429","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-25 23:28:11","that doesn't effect carousels added after load, so that's not really good either"
"430","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-28 03:54:40","Hmm, looks like I need one more level of `../`"
"431","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-28 04:43:29","Per our code style guide, please use double-quotes in HTML."
"432","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-29 17:28:14","You seem to have committed an unresolved merge conflict."
"433","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-29 17:37:02","Please add a `.remove()` at the end, per https://github.com/twbs/bootstrap/issues/12379#issuecomment-41473508"
"434","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-04-30 00:06:36","Need to adjust this comment and the similar one below."
"435","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-01 00:16:17","Should be an `<li>`."
"436","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-04 08:48:58","remove unused `assert` parameter"
"437","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-04 08:49:30","add space after semicolon"
"438","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-04 08:51:27","remove unused `$navbar` variable"
"439","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-04 08:51:44","add space after colon"
"440","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-05 09:31:26","@chrisirhc It would be more readable to use the array syntax, like this: ```javascript ng-class=""['alert-' + (type || 'warning'), closeable ? 'alert-dismissable' : null]"" ```"
"441","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-05 10:59:20","agreed, provided that it works :-)"
"442","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-05 19:08:43","No space before the `!` please."
"443","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-06 05:45:15","you dont need this var definition to be a separate line"
"444","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-06 05:45:36","look how `$window` was done above for ref"
"445","https://github.com/levelsbeyond/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-07 16:23:56","Let's use `levelsbeyond` or `levels-beyond` rather than just `levels`."
"446","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-09 16:32:15","I don't think using `!important` is gonna fly."
"447","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-09 16:46:21","Yeah, you're right. It's unnecessary."
"448","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-09 19:53:29","please ensure that there's a space after all commas in your code"
"449","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-09 19:54:04","please always put a space after the `function` keyword"
"450","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-09 19:55:16","A `while` loop is probably preferable to recursion."
"451","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-09 19:56:02","needs a unit test for the `uid` function"
"452","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-09 20:01:10","Cool thanks"
"453","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-09 22:18:57","Perhaps we should use `document.getElementById` here for speed? I'll leave that for @fat to decide."
"454","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-09 22:22:29","I think that makes sense, we don't want to query the DOM too much."
"455","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-10 05:50:27","Please move this into the previous section."
"456","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-10 05:51:03","This summary should mention RTL."
"457","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-10 05:59:10","Agreed, I pulled it from the example, will fix in a moment."
"458","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-10 05:59:21","What previous section? I don't quite understand."
"459","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-10 06:01:16","Into ""How to use"". i.e. up at least 2 lines"
"460","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-10 06:05:21","Got it, thanks!"
"461","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-10 08:35:16","Why is this brace on a new line?"
"462","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-10 16:45:58","i dont think we'd get much speed value given sizzle's code paths, but the code would probably look cleaner"
"463","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-10 16:50:56","this.$element.attr('aria-describedby', this.$tip.attr('id', this.uid(this.type)))"
"464","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-10 16:52:45","since you're not reusing these methods, and they are single lines�����i think you should just inline them above"
"465","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-10 16:57:13","```js Tooltip.prototype.uid = function (id) { do (id += Math.floor(Math.random() * 1000000)); while (document.getElementById(id)) return id } ```"
"466","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-10 20:11:52","`this.$element.attr('aria-describedby', this.$tip.attr('id', this.uid(this.type)))` I tried using this at first, but it would return the DOM object in the ``... this.$tip.attr('id', this.uid(this.type)))`"
"467","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-11 08:52:57","Not that it would really matter, but ```js do tipId += ~~(Math.random() * 1000000) while (document.getElementById(tipId)) ``` does the same, requires no semicolon and the double bitwise NOT operator performs slightly better than `Math.floor`, also it's shorter in the minified JS."
"468","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-11 20:39:42","ha sounds good, thx"
"469","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-11 20:40:37","i think we should keep the uid generation in it's own function, so it's easier to find down the line when we do move to an accessibility plugin"
"470","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 04:23:35","semicolon"
"471","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 07:26:08","BTW @cvrebert is this right? I mean is the `href=""data:text/css;charset=utf-8,""` part needed?"
"472","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 07:28:36","Yes, the `<link>` has to have an `href` for our HTML to validate."
"473","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 07:36:11","I thought so too. But why do we need `data-href` too? I mean, we should be able to change `href` just fine, shouldn't we?"
"474","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 07:40:01","Right, but we need to put the actual URL to the theme CSS *somewhere* in our code (so that we can then put it into or take it out of the `href`). This way seemed cleaner than hardcoding the URL into the JavaScript."
"475","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 13:33:33","`tipId` should probably be `prefix`. Also, this doesn't return anything so line 1222 isn't gonna work."
"476","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 22:45:40","How about using the `json` filter instead? http://docs.shopify.com/themes/liquid-basics/output"
"477","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 22:48:44","space after the `if` keyword"
"478","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 22:49:06","Outputs ```js var translations = {""name""=>""Chinese"", ""code""=>""zh"", ""description""=>""Bootstrap ����������������������������"", ""url""=>""http://v3.bootcss.com/""}{""name""=>""French"", ""code""=>""fr"", ""description""=>""Bootstrap en Fran����ais"", ""url""=>""http://www.oneskyapp.com/docs/bootstrap/fr""}{""name""=>""German"", ""code""=>""de"", ""description""=>""Bootstrap auf Deutsch"", ""url""=>""http://holdirbootstrap.de/""}{""name""=>""Italian"", ""code""=>""it"", ""description""=>""Bootstrap in Italiano"", ""url""=>""http://www.hackerstribe.com/guide/IT-bootstrap-3.1.1/""}{""name""=>""Korean"", ""code""=>""ko"", ""description""=>""Bootstrap ��������������������"", ""url""=>""http://bootstrapk.com/BS3/""}{""name""=>""Russian"", ""code""=>""ru"", ""description""=>""Bootstrap ��������-�������������������������"", ""url""=>""http://www.oneskyapp.com/docs/bootstrap/ru""}{""name""=>""Spanish"", ""code""=>""es"", ""description""=>""Bootstrap en Espa����ol"", ""url""=>""http://www.oneskyapp.com/docs/bootstrap/es""}{""name""=>""Ukrainian"", ""code""=>""uk"", ""description""=>""Bootstrap ua ����������������������������������������������"", ""url""=>""http://twbs.site-konstruktor.com.ua""} ```"
"479","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 22:50:06","this breaks JSLint & JSCS..."
"480","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 22:51:38","need to HTML-escape the variable string values used in here"
"481","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 22:52:20","My first approach actually used a JSON file for all the translation data, but the extra XHR didn't seem to be worth it."
"482","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 22:53:52","Ah, seems that Jekyll calls it `jsonify` instead?: http://jekyllrb.com/docs/templates/"
"483","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 22:54:57","Inserting them as textContent into a dummy element and then extracting them again?"
"484","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 23:04:37","```js var translations = {{ site.data.translations | jsonify }} ``` => ```js [{""name"":""Chinese"",""code"":""zh"",""description"":""Bootstrap ����������������������������"",""url"":""http://v3.bootcss.com/""},{""name"":""French"",""code"":""fr"",""description"":""Bootstrap en Fran����ais"",""url"":""http://www.oneskyapp.com/docs/bootstrap/fr""},{""name"":""German"",""code"":""de"",""description"":""Bootstrap auf Deutsch"",""url"":""http://holdirbootstrap.de/""},{""name"":""Italian"",""code"":""it"",""description"":""Bootstrap in Italiano"",""url"":""http://www.hackerstribe.com/guide/IT-bootstrap-3.1.1/""},{""name"":""Korean"",""code"":""ko"",""description"":""Bootstrap ��������������������"",""url"":""http://bootstrapk.com/BS3/""},{""name"":""Russian"",""code"":""ru"",""description"":""Bootstrap ��������-�������������������������"",""url"":""http://www.oneskyapp.com/docs/bootstrap/ru""},{""name"":""Spanish"",""code"":""es"",""description"":""Bootstrap en Espa����ol"",""url"":""http://www.oneskyapp.com/docs/bootstrap/es""},{""name"":""Ukrainian"",""code"":""uk"",""description"":""Bootstrap ua ����������������������������������������������"",""url"":""http://twbs.site-konstruktor.com.ua""}] ``` That's at least JSON, but then the if statement won't work as nice as it currently does, because it's an array now."
"485","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 23:06:08","Perhaps https://github.com/janl/mustache.js/blob/master/mustache.js#L52 ?"
"486","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 23:18:37","Hmm, the current approach does escape all these characters, the only thing that doesn't work and doesn't need to work is preserving whitespace with this method."
"487","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-13 23:26:08","JSCS unfortunately doesn't yet support ignoring specific blocks of code, should I exclude this file from the linting tasks?"
"488","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-14 00:06:48","If it's too much trouble, just exclude this file from JSCS along with a comment when JSCS supports inline comments."
"489","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-14 15:36:36","any specific reason why you wouldn't use a strict equality operator? (===)"
"490","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-14 15:40:57","any specific reason why you wouldn't use a strict equality operator? (===)"
"491","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-14 15:45:47","any specific reason why you wouldn't use a strict equality operator? (===)"
"492","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-14 17:44:52","Similar to the modal.js call to `$this.data('bs.modal', ...)`, the tooltip has to accommodate the _type_ - tooltip, popover, etc."
"493","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 09:10:00","I believe this changes the return type, which breaks backward compatibility."
"494","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 09:15:04","This calculates the minimum..."
"495","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 09:18:41","I think you need to do string to number conversions here."
"496","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 09:20:50","Might need to still support duration as an optional parameter due to backward compatibility."
"497","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 12:29:15","Nope, it doesn't. `$this` is set to `this` and that's exactly what jQuery wants you to return from such a function and that's also what was returned previously."
"498","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 12:35:40","Curly brace on wrong line"
"499","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 12:41:34","We use a new variable declaration for every variable."
"500","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 12:42:07","Single line return statements like these don't have curly braces in the rest of our JavaScript."
"501","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:37:18","which rule needs us to do that?"
"502","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:37:55","i dont like this change. Prefer the `||` to be on the next line so they line up"
"503","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:38:56","adding this kinda sucks with the addition of the force reflow comment��� is there a way to do this in a single line?"
"504","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:39:41","prefer this"
"505","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:40:01","not keen on the braces change in general"
"506","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:41:34","i dont think === doesn't anything in these situations."
"507","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:42:17","i much prefer the single line"
"508","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:43:05","this is harder to read, imho"
"509","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:43:05","Thing is that it's not more readable your way... And I'm not the only one to prefer this."
"510","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:44:16","this stuff is good :+1:"
"511","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:44:45","this is good :+1:"
"512","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:44:58","this is good :+1:"
"513","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:45:38","This isn't needed anymore, it was needed if `expr` was disabled."
"514","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:46:23","I see your point, I guess it's a matter of taste. We read from left to right so personally I expect this to be on the right side."
"515","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:48:12","I didn't add new braces, just break a few one liners."
"516","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:48:27","Well, the rule is either being strict or not."
"517","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:54:08","I totally disagree on this. It's much easier to read when it's not a one liner."
"518","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-15 22:58:21","I guess I could skip the parentheses if you mean that, and just use a one liner."
"519","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-16 19:27:06","typo: ""mdoal"""
"520","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-16 19:29:04","trigger call should be on a separate line"
"521","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-16 19:30:38","typo: ""retured"""
"522","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-16 23:35:14","Doesn't this take care of it anyways, wouldn't changing it form `.one()` to `.on()` take care of the issue?"
"523","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-19 04:09:48","RTL has been removed from the main repo; please delete this line."
"524","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-19 06:04:41","So, is JSHint getting rid of the `curly` check, or..?"
"525","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-19 06:06:35","It's a style check which I had moved to JSCS. But then since @fat didn't like it, at least not at this point, I removed the curly changes."
"526","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-19 06:10:01","Okay, then I guess we need a separate `.jscsrc` for Grunt."
"527","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-19 06:17:05","Personally, I don't think it's worth since the whole idea is to unify the style. Just give it a little time and we'll get to enable curly too eventually."
"528","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-19 06:21:06","I would move `core` before `docs` here."
"529","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-21 22:48:42","can you make these single line ifs at least"
"530","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-22 05:45:05","wouldn't hidden never get called if shown was prevented?"
"531","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-22 05:46:25","hidden change def makes sense :+1:"
"532","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-22 05:46:48","dont quite understand why this is inside the `show`��� maybe im missing something obvious though :)"
"533","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-22 05:50:53","Do you mean `show` or `shown`?"
"534","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-22 06:06:25","Doing the setup after the `Plugin.call` is too late and leaves the tests failing. FWICT, the modal can get shown and dismissed before the code gets a chance to setup the `hidden` event handler. So we've gotta do it before making the call. But we need to avoid setting up the handler if the showing of the modal gets cancelled, so we have to wait for `show` or `shown`. IIRC, `shown` led to test failures, which leaves us with `show` as the event to wait for."
"535","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-22 06:11:35","The problematic scenario is: 1. I click a button to trigger a modal 2. The `show.bs.modal` event gets prevented by some code, so the modal doesn't get shown. 3. I click a different button that triggers the same modal. 4. The modal gets successfully shown. Now when I close the modal, we want the latter button to get refocused (and it'd be best not to have the focus jump around multiple times unnecessarily). Hence, this `if` statement."
"536","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-22 06:29:23","Done."
"537","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-23 05:50:17","i still dont like this"
"538","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-23 05:52:02","i'd rather this was a single line if with a return ```js if (e.target !== e.currentTarget) return if (this.options.backdrop === 'static') return this.$element[0].focus.call(this.$element[0]) this.hide.call(this) ```"
"539","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-23 05:55:52","agree to disagree. i dont like multi line. if it's like 2 tiny properties. makes the chaining more clear."
"540","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-23 05:56:52","This one instance or all? I still like this way myself..."
"541","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-23 05:56:58","`&&` on the next line looks so much better"
"542","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-23 05:57:32","I'll see what I can do, but that change certainly doesn't fit in the patch the change was introduced."
"543","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-23 06:01:23","Well, sure but there's no way everyone will agree with everything. Someone has to compromise and I think you'll agree I've already made many changes to match your taste so far..."
"544","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-23 06:03:12","```js self.tip().hasClass('in') ? self.leave(self) : self.enter(self) ```"
"545","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-23 20:26:27","@JoeChapman , I'm sorry, I just saw your comment. Is there a gain in using the strict equality operator when comparing to a string type that isn't number-coercible? Is it for performance?"
"546","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-23 22:47:31","But `clear()` doesn't return anything..."
"547","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-23 22:52:04","It was just to stop the script... Should I change it to ```js this.clear() return ```"
"548","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-23 23:06:40","Ah, I see, this is Jacob being idiosyncratic in his style. Nevermind then. Leave as-is for the time being."
"549","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-27 11:04:33","Should probably add an explanatory comment here so that folks understand that the swapping is intentional."
"550","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-28 05:11:31","do we need all these checks��� who is extending the object prototype?"
"551","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-28 05:13:44","single line this"
"552","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-28 05:16:54","I don't agree, sorry. All `setTimeout` calls are not single lines apart from 2 cases."
"553","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-28 05:33:27","In theory we do, in practice I doubt we'll ever have a problem. This branch was initially intended to make things stricter. Not just to make a tool happy, but to reduce the chances of making mistakes and having issues."
"554","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-28 17:15:03","eh ok, dont feel super strongly"
"555","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-29 03:42:01","this seems inconsistent with our spacing around `{`, no?"
"556","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-05-29 04:20:05","I haven't added spaces before `[` and `]`. I can do it in another patch if everybody else agrees with this."
"557","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-03 21:13:20","Why'd you remove the `delta`-related ternary?"
"558","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-04 09:08:22","Because if delta is zero it removes the css value, which resets it to 50%, but if delta is zero it will always be 50% anyway."
"559","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-07 01:09:21","Semicolon There's also another one on the line below, seems like that one too slipped through."
"560","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-07 20:19:17","The testcase no longer involves any delay, so I need to update this description"
"561","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-10 04:10:10","Should clarify that this path is relative to the CSS file."
"562","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-10 04:25:19","I didn't use *relative* again in hopes of avoiding confusion between relative paths and relative paths options in Less. I'll try something else maybe."
"563","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-10 18:33:55",":)"
"564","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-10 18:46:59",":)"
"565","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-10 18:50:58","���_���"
"566","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 03:17:56","Shouldn't this be more like `($.support.transition && $.support.transition.end) ||��false` for it to be null safe? Also, does jQuery care if these are `false`?"
"567","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 03:27:08","We should probably namespace this event."
"568","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 03:32:58","You can use dot notation then."
"569","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 03:34:24","mm yeah good call"
"570","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 03:37:41","![Guard ALL the things](http://i.imgur.com/hLDwMvh.jpg)"
"571","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 03:39:34","ha - no it was good, made me find a bug"
"572","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 03:41:11","What happened here?"
"573","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 03:54:54","This seems more fitting :smile: ```js Carousel.prototype.keydown = function (e) { if (!/37|39/.test(e.which)) return this[e.which == 37 ? 'prev' : 'next']() e.preventDefault() } ``` Also, [ref](https://github.com/twbs/bootstrap/blob/c0e82accadea85094ef2f8b208975c449130f33f/js/dropdown.js#L60)"
"574","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 04:45:51","yeah it was a switch statement because mark and i were going back and forth with adding a first/last option"
"575","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 04:48:58","also think the switch is a bit more elegant in this case - only one lookup, etc"
"576","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 04:49:31","Yeah, but the semicolons aren't that elegant."
"577","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 04:49:46","Why `===` here?"
"578","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 04:50:21","to prevent against null/undefined"
"579","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 04:50:51","data-remote-cache=""false"" very different from not specifying data-remote-cache"
"580","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 04:52:43","`null` and `undefined` both are not `== false`."
"581","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 18:08:46","I think to be more in line with the rest of this file, these equality comparators shouldn't be strict. Also, as this would return if it evaluated to true, you should convert this to a guard clause and remove the `else if`."
"582","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 18:31:29","I agree with your first point, but I'm not understanding your second point. The way I saw it was that if the element is affixed to the top and there is a scroll then it either stays in the same state if the scroll distance hasn't passed the offset, or it becomes fixed if it has."
"583","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 18:47:29","I don't think I was clear enough, I was not suggesting that you change the flow, I was just suggesting a different strategy: ```js if (offsetTop != null && this.affixed == 'top') return scrollTop >= offsetTop ? false : 'top' if (this.affixed == 'bottom') { ... } ``` At least that's how the current JS is written, there isn't a single `else if` involved, but I guess you can discard my request, consistency based on the status quo is apparently not something worth aiming for."
"584","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 20:53:08","Adding these variables seems excessive to me."
"585","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 20:55:32","Using a mixin certainly makes them redundant. I'll remove when I add the mixin."
"586","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 22:21:16","i know��� am i missing something?"
"587","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 22:25:19","My mistake, sorry, `undefined == false -> true`, so this is perfectly valid."
"588","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-11 22:44:47","Could someone explain this to the JS noob over here :wave:? Why exactly would you need to compare types here? Doesn't seem to make any difference in regard to your earlier explanation, @fat, according to Chrome's console: ![eq](https://cloud.githubusercontent.com/assets/3535675/3251969/96b8adfe-f1b9-11e3-91fc-491b39c914f4.png)"
"589","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-12 00:12:40","Somehow I managed to get `undefined == false -> true`, I don't know how I did it. [This should have](http://zero.milosz.ca/) all the answers."
"590","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-12 01:53:36","Curly brace is on a new line here."
"591","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-12 02:06:02","Semicolon"
"592","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-12 02:06:08","Semicolon"
"593","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-12 02:07:52","```js $('#import-drop-target') .on('dragover', handleConfigDragOver) .on('drop', handleConfigFileSelect) ```"
"594","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-12 02:09:22","Space before parenthesis."
"595","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-12 02:45:01","Semicolon and you could define this variable at the very top of the file, as you don't only use this here but also earlier when you attach the listeners for the `dragover` and `drop` event."
"596","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-12 04:58:58","we only want to `disposeOnHide` if cache is explicity set to `false`. not if it's undefined��� if you still think im crazy, could write a simple line of js which exposes a bug or something?"
"597","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-12 05:11:22","As I understand it, `this.disposeOnHide` needs to be `true` in order for the element to get cleaned out. It is true if the expression `this.options.remoteCache === false` evaluates to `true`. According to [this handy table](http://zero.milosz.ca/), if `this.options.remoteCache` should be `null` or `undefined` it will not result in the expression evaluating to `true` if `==` would be used, because `null` and `undefined` are both not equal `false`, even if you don't use the strict equality operator."
"598","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-12 05:39:03","eh `'' == false` which i could see happening in a data attr"
"599","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-12 05:40:23","the api explicitly takes a boolean, so i think it makes sense to be explicit�����but also dont really care"
"600","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-12 05:42:25","That's exactly what I was asking with > You wanna be really sure that they explicitly want this? So, never mind then."
"601","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-12 05:45:22","yeah sorry, i was having trouble following"
"602","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-12 07:24:42","To clarify just in case, I'm perfectly fine with whatever operator you choose obviously, just curious. :)"
"603","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 03:25:30","Could you rename `evt` to `e` here and in `handleConfigDragOver `?"
"604","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 03:26:11","Could you convert this to `.on('click', removeImportAlerts)`?"
"605","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 03:27:41","Same as above."
"606","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 03:28:17","Would you kindly convert this to `importFileSelect.trigger('click')`?"
"607","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 03:30:47","Wouldn't it make more sense to convert `#import-manual-trigger` to a label and nest the `input[type=""file""]` in there? Then we wouldn't need to manage the click forwarding with JavaScript. /cc @mdo"
"608","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 03:33:18","I'm not sure, but maybe make the alerts closeable?"
"609","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 03:41:47","It still reads `config.json` here."
"610","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 03:43:52","Maybe use `importDropTarget.nextAll('.alert').remove()`, just to be safe."
"611","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 03:54:05","There seems to be a problem with indentation here."
"612","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 05:34:57","the spacing is off on these variables"
"613","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 05:35:13","if you return above you don't need these else statements"
"614","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 05:37:39","this comment is kinda self evident based on the line below"
"615","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 05:37:47","remove this comment"
"616","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 05:38:27","this comment doesn't really make sense to me��� not sure what you are saying"
"617","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 05:38:43","only ever ~be~ pinned?"
"618","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 05:42:34","this will run constantly now when you've scrolled past bottom (because you're not exiting above)��� did you mean for that?"
"619","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 09:19:00","I thought they should be, left it out as it wasn't in mdo's jsbin. But will just add it in. Makes sense"
"620","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 09:28:16","From previous experience doing it that way had browser support issues. Quick google found this can be confirmed at least for old versions of Firefox. http://stackoverflow.com/questions/7742278/workaround-for-file-input-label-click-firefox This jsfiddle shows it works in modern chrome and firefox though. http://jsfiddle.net/thomaswelton/em7m9/ Not sure what you want to do about it. Will leave as is for now see what @mdo or @fat says during the JS code review."
"621","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 09:33:26","I was suggesting something like [this](http://jsbin.com/dazih/1/edit?html,css,output)."
"622","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 09:44:17","Yeah either way with the input nested inside a label or using the `for` attribute I think you get browser support problems. But this is from memory going a while back. But even if we do do it like this I would still need to add a javascript click event onto label clicks so that we can remove any existing alerts."
"623","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 09:48:17","@mdo Did it this way on [WTF, forms?](http://wtfforms.com/), so I was suggesting it. Also, you could listen for the `change` event of the input, rather than the `click` event of the label. That would also prevent any alerts being closed if the file select dialog is discarded by the user."
"624","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 09:56:12","Ok well WTF forms was made for IE9 and more modern browsers. If you are happy with it then I will change to use that method. But listening for the change event on the file select to remove the exisiting alerts doesn't give a nice user experiance. This is how I did have it for file drop and file select and what happened was you got a nasty jump effect. Where the error alert was removed and suddenly replaced by a success of other error message. Removing the existing alerts when the user showed an intent to try again looked and worked better IMO"
"625","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 10:18:37","@hnrch02 updated to use a label"
"626","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 10:46:54","Okay, that seems reasonable. Maybe @cvrebert can comment on IE < 9 support."
"627","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 11:22:18","The customizer doesn't work with IE less than 9 or 10. On Jun 13, 2014 1:48 PM, ""Heinrich Fenkart"" <notifications@github.com> wrote: > In docs/customize.html: > > > @@ -23,6 +23,18 @@ > > <![endif]--> > > > > <!-- Customizer form --> > > + > > +<div class=""bs-docs-section""> > > + <div id=""import-drop-target"" class=""bs-dropzone""> > > + <h2>���</h2> > > + <p class=""lead"">Have an existing configuration? Upload your <code>config.json</code> to import it.</p> > > + <p>Drag and drop here, or <a id=""import-manual-trigger"" href=""#"" class=""btn-link"">manually upload</a>.</p> > > Okay, that seems reasonable. Maybe @cvrebert <https://github.com/cvrebert> > can comment on IE < 9 support. > > ��� > Reply to this email directly or view it on GitHub > <https://github.com/twbs/bootstrap/pull/13790/files#r13745855>. >"
"628","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 16:58:32","Please give this div an id."
"629","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-13 17:05:42","Cool, thanks"
"630","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-16 21:04:37","Please remove the comment"
"631","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-16 21:05:03","And also the semicolon."
"632","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-17 01:46:14","You should use the `that` variable instead of the wrong `this` context here."
"633","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-18 07:57:21","Should use RegExp.quote here? Yeah, hacky indeed."
"634","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-18 08:01:09","Why would we need that?"
"635","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-18 08:05:36","`process` runs before each file is added to the concatenated output, so unless the UMD stuff is included twice in a source file, I don't see a problem."
"636","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-20 09:44:36","Reads `px` instead of `%` here."
"637","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-21 08:29:17","Could be simplified to `font-size: (100% * @font-size-small / @font-size-base);` (unless you're about to use [`--strict-units:on`](http://lesscss.org/usage/#command-line-usage-strict-units) eventually)"
"638","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-23 14:09:36","Typo: too many dots"
"639","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-24 07:04:57","Why is/was it `^=` as opposed to `=`?"
"640","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-24 14:41:20","Because of button groups, they toggle via `data-toggle=""buttons""`"
"641","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-25 04:41:13","Doesn't that make this rule redundant?"
"642","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-25 05:08:54","I guess td and th backgrounds can be removed not sure why the original decision was to style the cells, not the rows in fact the rows aren't styled anywhere."
"643","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-25 14:19:41","Horizontal alignment is off by 1 char"
"644","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-25 14:54:31","Whats the easiest way to submit amendments to a PR?"
"645","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-25 15:05:35","Make another commit on your `gray-base-variable` branch and push the updated branch to GitHub. Although for very minor stuff like this, we often just fix it ourselves when merging the pull request."
"646","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-26 18:14:04","Shouldn't this be a relative link instead of hardcoding `getbootstrap.com`?"
"647","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-26 18:17:50","Yep. I'll fix it. Thanks."
"648","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-28 04:24:16","Does that first length check actually improve perf that much?"
"649","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-28 04:26:06","Maybe we should just describe in words how to remove the fade, rather than adding this duplication?"
"650","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-28 05:04:11","It's not about perf, `$active` would be `true` because it isn't a real array but rather a jQuery collection. `!!$() === true`."
"651","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-28 05:06:36","Not sure I'm following, I wouldn't want to modify the visual test file to test this."
"652","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-28 05:23:09","Oh, derp, didn't notice the filename since I was viewing the diff on mobile. Thought this was the docs."
"653","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-06-28 05:24:11","That's what I thought :wink:"
"654","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-01 15:22:38","`:not()` isn't supported by IE8..."
"655","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-01 16:20:01","@cvrebert, oh sorry. Work around it by additional rule"
"656","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-02 16:15:00","Wrong class here"
"657","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-02 16:23:15","Yeah. I'm a moron this morning. Sorry. Ignore it anyway, as I'll do your first suggestion."
"658","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-02 21:10:46","Yes. The use case is for when the window is scrolled to the bottom (and the affix is affixed to the bottom) when the document height changes. The bottom-affixed affix should follow along at the bottom of the content. ![this_is_my](https://cloud.githubusercontent.com/assets/4823640/3462414/51974148-022d-11e4-8f22-4de4c4646c97.gif)"
"659","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-02 21:25:25","From what I understood, the use case for `unpin` was designed around affix elements that would mainly be affixed to the top of the page (`affix-top`) or to the top of the viewport (`affix`). In that case, when the affix element is affixed to the bottom and the window is being scrolled up, you don't to want to affix the element until the top of the viewport has scrolled past the top of the affix element. In the docs, for instance... ![this_is_my](https://cloud.githubusercontent.com/assets/4823640/3462550/9b3bfefa-022e-11e4-8bd1-0bd9f8a13caa.gif) The use case I was trying to achieve is different, however. I needed the affix to always be affixed to the bottom of the page (`affix-bottom`) or to the bottom of the viewport (`affix`). In this case, it should become affixed to the viewport as soon as the bottom of the viewport has scrolled to the bottom of the affixed element. In my test, for instance: ![this_is_my](https://cloud.githubusercontent.com/assets/4823640/3462609/50e25466-022f-11e4-8b40-6c6e3c087411.gif)"
"660","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-03 05:55:20","Semicolon"
"661","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-04 05:16:33","We can probably combine these into a single if/else, no? Like so: ``` {% if site.github %} <script src=""../dist/js/bootstrap.min.js""></script> <script src=""../assets/js/docs.min.js""></script> {% else %} <script src=""../dist/js/bootstrap.js""></script> <script src=""../assets/js/vendor/holder.js""></script> <script src=""../assets/js/vendor/ZeroClipboard.min.js""></script> <script src=""../assets/js/src/application.js""></script> {% endif %} ```"
"662","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-04 05:19:30","Yeah, this just seemed more explicit about what's equivalent to what."
"663","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-04 05:26:57","Word, follow your heart."
"664","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 05:38:31","Umm..."
"665","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 05:43:07","Hehe, right, that's a placeholder for a comment I'll write if we agree this fix is the way to go."
"666","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 07:07:29","ha could you leave a bit more in this note��� why 18?"
"667","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 07:11:09","I wish we had constants for these templates���"
"668","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 07:12:42","It didn't work with 0, obviously, so I moved to a higher number and remembered that Paul Irish's [rAF polyfill used 18](https://gist.github.com/paulirish/1579671#file-raf-js-L20) (it actually uses 16 ms now that I see it. I guess I remembered wrongly)."
"669","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 07:13:23","also `+` to start the lines looks much better imho��� don't have all those dangling things"
"670","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 07:14:11","?"
"671","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 07:15:05","#13500"
"672","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 07:15:14","do you even need the trailing `/`?"
"673","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 07:18:32","Doesn't seem like it, now that I tested it in Chrome. Don't know if I should remove them though... your call."
"674","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 07:18:35","ah ok"
"675","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 07:19:20","ah cool����� mb add link to that in comment?"
"676","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 07:20:47","I know, but IIRC we moved away from all the lax stuff some time ago..."
"677","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 07:21:08","I see what I can do."
"678","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 07:21:35","Yup, wrote that comment before I found that PR."
"679","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 07:49:34","I would hope that we'd leave some form of tag closure in, for validity/correctness's sake."
"680","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 07:52:04","Totally agree with this ^^"
"681","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 07:53:01","Last time I did this I had to revert it before merging since @fat didn't like it. It's only in tests so it's not a big deal if we leave it I guess."
"682","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 20:46:54","my vote is `<li id=""home""></li>` or `<li id=""home"">`��� we've dropped the `/` in `<img>` etc, dont see why we would randomly add them to `li`s"
"683","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 20:58:15","why 4 spaces here?"
"684","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 20:59:23","These all have four spaces, the original templates that were spread across lines were all indented by four spaces, so I sticked to it. Should I move to two?"
"685","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 21:18:25","Will change it back to `<li id=""home""></li>` tomorrow."
"686","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 22:31:35","Remove the comment"
"687","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-06 22:32:21","Add a line break above this, and remove the one between `.pull-right()` and `margin-right`. Also remove the `!important` in both instances."
"688","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-07 02:52:47","`!important` is needed otherwise the fix needs to be duplicated inside other selectors. Since this CSS is rather obscure I thought it was better to make `.navbar-right` self-contained. Do you prefer I go the other way?"
"689","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-07 04:43:46","eh, it's chill"
"690","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-07 05:08:02","I imagine if we move the `.navbar-right`/`-left` classes to be after the navbar components we'll have no problem dropping the `!important`. Haven't tested it myself, but it sounds like it should work :grin:."
"691","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-07 06:11:38","Good call! http://jsbin.com/leyon/2"
"692","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-07 19:22:30","Add a line break above this line, and break the selectors onto separate lines."
"693","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-07 19:22:38","Separate lines for selectors here as well"
"694","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-07 19:22:46","Separate lines for selectors here, too"
"695","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-07 20:21:58","Instead of `gulpif`why not using 2 streams and then merging them? Something like this: ``` gulp.task('scripts', ['clean'], function() { var buildTemplates = function () { return gulp.src('src/**/*.html') .pipe(minifyHtml({ empty: true, spare: true, quotes: true })) .pipe(templateCache({module: 'ui.select'})); }; return es.merge(gulp.src('src/select.js'), buildTemplates()) .pipe(concat('select.js')) .pipe(header(config.banner, { timestamp: (new Date()).toISOString(), pkg: config.pkg })) .pipe(gulp.dest('dist')) .pipe(uglify({preserveComments: 'some'})) .pipe(rename({ext:'.min.js'})) .pipe(gulp.dest('dist')); }); ``` I'm doing it on angular-ui/ui-select#98"
"696","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-07 20:31:48","I saw that you did a [PR](https://github.com/marklagendijk/gulp-ng-html2js/pull/6) to add the `options.declareModule` and avoid all those 'try catch' but there is still too much code generates for each template. There is also other module called [gulp-angular-templatecache](https://www.npmjs.org/package/gulp-angular-templatecache) that puts all your templates in this format: ``` angular.module(""mymodule"").run([""$templateCache"", function($templateCache) { $templateCache.put(""template1.tpl.html"",""<div>1</div>""); $templateCache.put(""template2.tpl.html"",""<div>2</div>""); $templateCache.put(""template2.tpl.html"",""<div>3</div>""); }]); ```"
"697","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-07 20:33:04","Is this `rename` really needed?"
"698","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-08 19:08:12","How about `return this.$items.eq(itemIndex)` here?"
"699","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-08 21:48:01","typo on **Instal**"
"700","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-09 11:38:14","Not necessary if you use the patch I posted."
"701","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-09 12:46:49","These cleanups are no longer needed, `#qunit-fixture` [is emptied](https://github.com/twbs/bootstrap/blob/643effe382bb12b4ff1460e9e1987948b1763990/js/tests/index.html#L42-L46) after every test."
"702","https://github.com/nette/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-09 22:15:05","What, echo? So it will be displayed on website? Isn't it against ""do not display errors"" principle?"
"703","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-10 07:12:47","Travis build fails if I revert ""disallowQuotedKeysInObjects"""
"704","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-10 07:15:14","NAVER - http://www.naver.com/ -------------------------------------------- leeyoungtaik@naver.com ������ ��������� ������ <Re: [bootstrap] issue #13556 Add aria role of option,aria-selected and tabindex based ke... (#14097)> ��� ��������� ������ ��������� ������ ������������������. -------------------------------------------- ������ ��������� ������ ��������� ������������ ���������, ������������ ������������ ��������� ������ ���������������. --------------------------------------------"
"705","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-10 12:32:52","Because you put `tabIndex` in quotes."
"706","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-10 12:34:31","It should be `.trigger('focus')` to support jQuery builds without event aliases."
"707","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-10 12:34:48","We don't put spaces after object keys."
"708","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-10 12:35:34","You missed the whole point of my patch. The same functionality should also apply when the if statement this is wrapped in evaluates to false."
"709","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-10 12:36:39","Also, please move this `attr` call to a separate line."
"710","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-11 03:53:09","So do you mean to say that aria-selected should be in quotes and tabIndex shouldn't be in quotes?"
"711","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-11 05:00:20","I'm not sure how likely we are to change the ""defaults"" of these settings in our examples.. A ""for best accessibility, use these settings"" callout is at least warranted though."
"712","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-11 06:30:50","Infinite sliding and auto sliding are problematic not only for people with disabilities but also for keyboard users, especially if there is more content in the slider. http://uxmovement.com/navigation/big-usability-mistakes-designers-make-on-carousels/"
"713","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-11 14:40:27","Is there a reason why this is not just appended to the other two uses of `$next` and `$active` two lines above?"
"714","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-11 14:40:49","Missing space after colon."
"715","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-11 14:41:23","Shouldn't this use something like the things proposed in [this article](http://a11yproject.com/posts/how-to-hide-content/)?"
"716","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-14 05:17:06","True , But here we are dynamically changing the left property to show and hide. I don not know how you do with clip property. If you know how to do, please let me know so that I can Rollback my changes...."
"717","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-14 10:13:04","value isn't aligned properly"
"718","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-14 10:13:29","o_O"
"719","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-14 10:16:18","Can't have a heading description without a heading; see https://github.com/twbs/bootstrap/blob/master/grunt/bs-lessdoc-parser.js#L18"
"720","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-14 10:31:47","Yeah, my IDE is annoying, somehow its told never to use tabs, but for some reason it used them -_- so now its indented with spaces not tabs..."
"721","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-14 13:45:43","@ilikeprograms - Side note: Bootstrap contains an .editorconfig in its root. Take a look at adding a plugin to your IDE: http://editorconfig.org/"
"722","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-14 20:14:10","Neither do I, just wanted to throw this in, as [that's what we do](https://github.com/twbs/bootstrap/blob/ed8228e1cbf73c1919c291054f4ea1309923cdae/less/scaffolding.less#L121-L134) for our `.sr-only` class. Maybe @mdo can chime in here and recommend a solution?"
"723","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 21:23:27","the various tabIndex additions are unnecessary, as a link (an <a> element with an href, as opposed to an anchor) is already focusable by default. the use of aria-selected here is wrong per spec http://www.w3.org/TR/wai-aria/states_and_properties#aria-selected though"
"724","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 21:24:46","aria-selected is wrong here per spec http://www.w3.org/TR/wai-aria/states_and_properties#aria-selected (you'd want to set the aria-expanded attribute on the control element to indicate is the element the control ... controls ... is expanded or not"
"725","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 21:25:22","see above comment about aria-selected being wrong"
"726","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 21:25:26","see above comment about aria-selected being wrong"
"727","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 21:37:59","display:none in the .collapse CSS declaration already takes care of hiding the element from screen readers / AT. no need for explicit aria-hidden (though of course it doesn't do any harm, just over-specifying things)"
"728","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 21:40:08","Okay, I see that aria-expanded should be added to the trigger element, but I'm not quite sure what you mean by the aria-selected being incorrect."
"729","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 21:42:25","Cool! Thanks for the info."
"730","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 22:05:52","take the example of a button that shows/hides a nav menu - here, the button would not need aria-selected, it would be against the spec to indicate the trigger button as ""selected"". in some situations aria-selected may be ok/needed (such as a classic tab navigation), but i would not generalise it into the actual plugin js here, as there are other uses/situations where it would not be appropriate"
"731","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 23:19:51","You can merge this with the line above: ```js $active .removeClass('active') .find('> .dropdown-menu > .active') .removeClass('active') .end() .find('[data-toggle=""tab""]') .attr('aria-expanded', false) ```"
"732","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 23:21:04","Same as my comment above."
"733","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 23:21:25","Should probably split this chain up into multiple lines."
"734","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 23:25:33","""If the collapsible [sic] element is closed by default"""
"735","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 23:28:48","Please remove the quotes from the booleans and add a space after the comma."
"736","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 23:29:45","Same as above and please also remove the semicolons."
"737","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 23:33:51","Please combine the two `attr` calls into one: ```js .attr({ 'aria-selected': false, 'aria-expanded', false }) ```"
"738","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 23:38:14","There's a `t` floating around here."
"739","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 23:40:28","Same as above and please also change the name of `isin` to something more descriptive."
"740","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 23:40:34","Semicolon."
"741","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 23:45:22","Still no spaces after the comma."
"742","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-15 23:47:21","Sweet, I didn't know this was an option."
"743","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-16 00:16:34","Maybe do it like [this](http://www.diffchecker.com/k9um1io3)?"
"744","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-16 00:19:52","Not sure about the style of this chain, but that's not for me to decide. (Not like I am an official collaborator :grin:)"
"745","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-16 00:34:40","Please use [`equal`](http://api.qunitjs.com/equal/) for these kinds of assertions."
"746","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-16 00:34:58","Same as below."
"747","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-16 00:49:52","Might be clearer to just start a new chain with `$active`, rather than using `.end()`"
"748","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-16 00:55:35","I was putting it up for discussion [here](https://github.com/twbs/bootstrap/pull/14154#discussion_r14972098). Having two `$active`s directly below each other seemed unnecessarily redundant."
"749","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-16 00:57:01","There's a campaign to rectify that last part :smile:"
"750","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-16 01:01:00","@cvrebert You would mind dumbing it down a bit for me? Not exactly sure what you mean. (Am not a C2 English speaker either...)"
"751","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-16 01:12:25","I hope that you are made official, in the near-ish future. And your English is way better than my German :P"
"752","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-16 01:25:53","I don't believe in your German being that bad. Maybe slightly worse than my English but not at all bad."
"753","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-16 18:40:15","Just to give some input, my reasoning for how I did that was to have chained selections as the first part of a line, then actions performed on it."
"754","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-17 02:16:49","@cvrebert Mind handing me the eloquence for one second here?"
"755","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-17 02:53:06","""when using the data-api's auto-initialization"" seems slightly better. Looks good overall."
"756","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-17 03:12:52","""To have your alerts use animation when closing,"""
"757","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-18 09:01:44","Unfortunately my IDE doesnt support it :( I may look into getting a plugin for Vim though. Do you happen to know if theres one for Nano aswell :) ?"
"758","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-18 22:14:13","Semicolon. Also, please adjust the spacing so that the `=`s align."
"759","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-18 22:15:47","Please extract this template into a variable and use string concatenation to make it more readable."
"760","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-18 22:21:56","Please place each property in these objects on a new line, to stay consistent with the rest of the file. ```js .bootstrapPopover({ selector: 'a.first', trigger: 'click' }) ```"
"761","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-18 22:25:03","Check if the second popover is also removed from the DOM on a subsequent click on the trigger. Also, please add ""second"" or ""first"" to the messages to be able to clearly identify the popover, just like you did in the tooltip test case."
"762","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-18 22:25:21","Also check here if the popover is removed on a subsequent click."
"763","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-18 22:50:47","Still have semicolons on these `.click()`s here. Also, please add an empty line before each of the said rows."
"764","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-18 22:51:55","Missing the removal check here. Also remove the empty line after the `.click()` call."
"765","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-18 22:52:08","Semicolon :laughing:"
"766","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-18 23:08:32","Semicolon. Also, we use four spaces in front of these pluses."
"767","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-18 23:38:21","Almost there. Still using `.append` here."
"768","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-19 08:38:11","This line should be replaced with `""space-between-declarations"": ""\n""`"
"769","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-20 03:17:55","When the padding mirrors the input height, it makes the icon look like it occupies a square on the side of the control. This looks much better on the range of control sizes, including small, default, and large. This difference is much more pronounced when the icon comes first on the left because the padding plays a much bigger role."
"770","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-20 03:20:18","If using font awesome, the library is likely to come after bootstrap and override `line-height` set here. I'm inclined to use `!important` to make it easier for these line heights to persist. If the icons are being used explicitly within an input box, it should always be the case that their height should match that input box so marking them as important shouldn't cause too much confusion."
"771","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-20 03:23:08","If the `form-control-feedback` is not a sibling, but a child of a sibling, we want to move it to the top when there is no label. This is a possible scenario when using the left aligned icon forces you to wrap it inside of an element with relative positioning for alignment reasons."
"772","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 07:40:32","Use `$viewport.is('body')` here."
"773","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 07:41:32","You only use this variable once, could just as well inline it. Also, `this.$element` is already a jQuery object so no need to wrap it in `$()` again."
"774","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 07:41:42","Semicolon."
"775","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 07:42:21","The extend here seems unnecessary, or am I missing something?"
"776","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 16:00:50","A 2nd description for a section or a section description without a corresponding section heading doesn't conform to our LESS docs mini-language, hence the Travis build failure."
"777","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 16:31:03","I was talking about this `$.extend`, the other one was fine, IMO."
"778","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 16:31:44","The curly braces here aren't necessary."
"779","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 16:32:20","Perhaps add a local var to avoid calling .offset() twice"
"780","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 16:33:50","https://github.com/ericmartel/bootstrap/commit/7228c8071369b405d9426f66cb47733fcd8981b4#diff-f3e99e0bb007ace7a370f0492b9cb5abR355 That's how it was before, @ericmartel removed the `$.extend` per my suggestion, but I actually was talking about the one farther down this file."
"781","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 16:35:49","Perhaps use `document.body` here"
"782","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 16:36:55","I didn't have them at first, but it made the 'test' script complain that the number of whitespaces should be 8 and not 6 (because it was going to the next curly brace)"
"783","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 16:37:53","@cvrebert @hnrch02 thanks for your feedback guys, I really didn't like calling it twice, but coming from C++ I was hoping the call could get cached / optimized away? I guess it's not the case in JS?"
"784","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 16:40:08","@cvrebert I wasn't too sure about that one, but based on http://jsperf.com/jquery-body-vs-document-body-selector this seemed like a good option to use `$('body')`. Is there a good way to profile performance of jquery / bootstrap or in a case like this it's more a case of project standards?"
"785","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 16:40:22","Interesting. Seems like a bug in JSCS. I'll look more into it and file an upstream issue."
"786","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 16:44:15","FYI, the issue wasn't popping while the semi-colon was there"
"787","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 16:46:00","Yeah, we had something like that before: #13512 and https://github.com/mdevils/node-jscs/issues/357."
"788","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 16:47:22","No standard that I know of. It's admittedly a micro-optimization (http://jsperf.com/jquery-body-vs-document-body-selector/2 ). It's ultimately up to @fat to decide."
"789","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 16:50:24","http://mrale.ph/blog/2012/12/15/microbenchmarks-fairy-tale.html"
"790","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 16:53:46","Doesn't seem to be cached, or if it is, then other overhead is outweighing it; http://jsperf.com/caching-of-offset-value"
"791","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 16:54:55","Thanks for sharing! Since I'm new to all this that's priceless when you guys share information like this! I have a bunch of meetings in the afternoon, but I definitely wouldn't mind changing it to `$(document.body)` later tonight!"
"792","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 16:56:18","Again, resources posted below. I don't think its worth talking about optimization and speed on such a scale. (Talking about scale again, hopefully that doesn't work out like last time.)"
"793","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 17:02:16","To fix it for now, you can remove the curly braces and add a `break` in the next line."
"794","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 17:05:38","Never mind my previous comment, it's probably better (in order to be more consistent with the rest of the codebase) to switch to this instead: ```js if (/absolute|fixed/.test(this.$element.css('position'))) { return this.getScreenSpaceBounds() } ```"
"795","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 18:53:01","you should better create a new `pager-variant` instead"
"796","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-24 22:14:15","The regular expression is indeed more elegant, I made the change! Thanks"
"797","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-25 00:37:47","This change should be reverted."
"798","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-25 03:58:56","Good catch."
"799","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-25 17:59:57","No need to split this up into separate lines, you can use `.end()` after the `.detach()` and get the original set back."
"800","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-26 22:28:28","""control"" => ""plugin"""
"801","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-26 22:30:25","Needs an `id`. And a corresponding entry needs to be added to the nav (which is in another file)"
"802","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-26 22:32:03","Unfortunately, I'm required to ask for the semicolon to be removed"
"803","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-26 22:35:53","Good point"
"804","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-26 22:37:54","That seems reasonable, but there are ton of headings that don't have an ID and sidebar listing. I was thinking of this as a subsection of the programmatic API section. That's why I went for an h4 instead of an h3."
"805","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-26 22:38:37","I believe you, but I'm curious as to ask why. Is it a jekyll parsing thing?"
"806","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-26 22:46:03","No, it's Bootstrap's JS coding style"
"807","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-26 22:46:37","Oh, didn't notice that. Never mind then."
"808","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-29 00:24:34","Remove extra space between the words ""context"" and ""is"""
"809","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-29 00:30:51","Fixed."
"810","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-30 17:32:34","you can combine these conditions `if ($viewport.is('body') && /fixed|absolute/.test(this.$element.css('position'))`"
"811","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-07-30 17:34:29","if you pass `$viewport` into `getScreenSpaceBounds` then you won't have to query the dom later"
"812","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-01 01:34:39","Why hardcode `Helvetica` here? Also, it's four spaces before the leading pluses."
"813","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-01 01:35:01","All the other async tests stop at the beginning of the test."
"814","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-01 01:35:31","Maybe put these properties all on their own line?"
"815","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-01 01:38:13","Not sure about this long string here. Maybe use a variable like above for the styles?"
"816","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-01 01:54:47","> Why hardcode `Helvetica` here? A vain attempt to avoid OS differences in font availability (and thus sizing of the tooltip text)."
"817","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-01 01:57:51","How about we hide the text? Using something like [`font: 0/0 a`](https://github.com/twbs/bootstrap/blob/232b61a3ce36831d6167c7e2637d2e4162a9a5a4/less/mixins/hide-text.less#L11)?"
"818","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-01 01:59:32","Meh."
"819","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-01 18:30:17","Change to: ```js var tipId = isVisible ? $tip.attr('id') : this.getUID(this.type) ```"
"820","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-01 19:09:03","For the record, I was originally using an equality-after-`Math.round()` check here, but IE9 is off by 1px vs. everything else (because IE quirkiness), so I had to use this approach instead."
"821","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-04 15:48:36","* Maybe say it's specifically a Java applet. * Should mention `translate3d(0,0,0)`"
"822","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-04 16:32:44","How about: > Java applets that are descendants of elements with forced hardware acceleration using <code>translate3d(0,0,0)</code> are invisible on Windows"
"823","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-04 16:37:27","Sounds good to me."
"824","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-04 20:15:01","Should be ```js if (self && self.hoverState == 'in') return ```"
"825","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-04 20:33:06","Semicolon."
"826","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-05 13:34:49","Why are you removing the `autocomplete=""off""` ??"
"827","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-05 13:36:57","You seem to have deleted this warning?"
"828","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-05 16:48:28","@apexskier You still haven't fixed this..."
"829","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-05 17:00:37","Whoops, must have unfixed it while rebasing."
"830","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-05 20:14:16","No, I have combined the checkbox and radio section into one, because they had virtually the same content, including these two callouts."
"831","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-05 20:18:36","I removed it from the *highlighted* example code, because we a) have a callout at the top stating that this is required and b) the user could (and probably should) add this to a parent element like a `form` or the `.btn-group`."
"832","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-05 21:46:25","Sorry, my bad, couldn't find the remaining instance in the diff for some reason."
"833","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-06 00:18:27","@cvrebert are or have?"
"834","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-06 00:40:47","""have"", although I don't think you necessarily need to mention the transitions here."
"835","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-06 00:41:33","Okay."
"836","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-08 00:25:09","No need for the `keyCode` fallback here, the point of `which` is that it normalizes `keyCode` and `charCode`."
"837","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-08 00:27:00","Missing space after minus."
"838","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-08 00:29:03","Use `$items.eq(index)` here."
"839","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-08 00:31:11","No need to initialize a new set here, if you use `$.fn.eq` as I pointed out above. Also, to support the `noConflict` mode, you need to rewrite this to `if (newTab) Plugin.call(newTab, 'show')`."
"840","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-08 00:32:09","Use `.trigger('focus')` here to support jQuery builds without event aliases."
"841","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-08 00:33:30","Need to take the `data-target` option into account here."
"842","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-08 00:34:12","The initialized set here isn't used anywhere."
"843","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-08 00:35:43","We don't require tab toggles to have an ID."
"844","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-08 00:37:21","You can append this to the previous line. Also, use `Tab.prototype.keydown` here in order to support the `noConflict` mode."
"845","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-08 01:21:59","No need for the `toString` here."
"846","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-08 01:22:37","Non-strict, please. Also, either remove the curly braces or place the statement on a new line."
"847","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-08 01:24:48","Not sure about the alignment of values here."
"848","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-08 01:25:19","Non-strict again, please."
"849","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-08 01:25:52","Not a native speaker, but should this comma be here?"
"850","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-08 01:26:19","Same as in the other test"
"851","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-08 01:26:57","Just use an `equal` here."
"852","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-09 02:14:37","Removing this whole method seems like a breaking change to me. Maybe just rewrite it to the following instead of removing it altogether. ```js Modal.prototype.checkScrollbar = function () { this.scrollbarWidth = this.measureScrollbar() } ```"
"853","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-09 04:04:34","Agreed. Done."
"854","https://github.com/nette/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-11 20:09:14","Why is it in `requitre-dev` section and not in the `suggest`? The same for others except the `tester`."
"855","https://github.com/nette/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-11 20:13:23","It's here because of test suite. And I don't think it should be in suggest - the bootstrap works fully without it."
"856","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-12 20:25:55","Should the `60%` be a variable?"
"857","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-12 20:29:30","I grabbed the background color: mix example from boostrap-datepicker."
"858","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-12 20:30:22","It would be extremely difficult to demo this since it only really shows up in IE9 non-compat view."
"859","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-12 20:31:29","Regardless if it only happens in IE9, if the style is overridden and the filter is specified to be disabled, there will not be a background color. There should be."
"860","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-12 20:33:55","Not seeing how IE9 makes it any harder to demo."
"861","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-12 20:36:30","I'll see what I can do, give me a minute. The point is, that IE9 noncompat mode shows it without edits. brb"
"862","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-12 20:56:15","Ok. So I found where you're setting the color of the elements like label in .label-variant. In the current BS3 default components, this will not repo. It's only in the downstream case where someone else may leverage #gradient on it's own that this will show up, or in my case I found where our code is overriding the label color downstream but the gradient takes precedence where it's 100% supported."
"863","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-14 16:08:39","While tab toggles do not currently require an ID, I am proposing we make this a requirement in order to properly support the need for the `aria-labelledby` property. If not, we would need either a random ID generator or we can fallback to use `aria-label` which would not be ideal since we already have a visual label we can use."
"864","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-14 20:34:32","These comparisons are still strict. Also, you can inline `uBound` here and use `$.fn.last` above."
"865","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-14 20:35:11","This doesn't look like it should've been committed."
"866","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-14 20:38:19","These equals are not aligned properly."
"867","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-17 17:01:57","btw., is it OK to use http://codeguide.co/#css-single-declarations?"
"868","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-17 17:02:35","`@value` here is just a temporary variable (and it should be defined right in the mixin). I've disguised it as a mixin parameter but this is really stupid."
"869","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-18 10:24:50","btw., is it OK to use http://codeguide.co/#css-single-declarations?"
"870","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-18 10:25:48","`@value` here is just a temporary variable (and it should be defined right in the mixin). I've disguised it as a mixin parameter but this is really stupid (as well as repeating `percentage((@index / @grid-columns))` four times near each other)."
"871","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-20 07:02:08","Thanks, I am not familiar with `$.fn.last`, can you provide some docs/ examples?"
"872","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-20 14:29:49","```js switch (key) { case 37: // left case 38: // up $newTab = (index == 0) ? $items.last() : $items.eq(index - 1) break case 39: // right case 40: // down $newTab = (index == $items.length - 1) ? $items.eq(0) : $items.eq(index + 1) break } ```"
"873","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-28 23:41:07","Skew?!? More like Eww!!"
"874","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-08-30 20:37:50","IE8 doesn't let us add new properties to `TextRectangle` instances, so we have to make a whole new object (or use prototypes)."
"875","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-02 15:50:15","Maybe you could handle these lines here [like this](https://github.com/twbs/bootstrap/pull/14153/files#diff-440894180ffcb133a60f858a3a4f1008R168)?"
"876","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-02 16:18:48","replacing my if/else with the the two liner of var and toggling makes some tests fail, strangely...although functionally it seems to be equivalent. will dig into it again later."
"877","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-03 13:34:25","Non strict comparison here, please."
"878","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-03 13:34:43","Maybe use smaller delays in the spirit of #14055?"
"879","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-03 13:53:12","Changed to 10ms instead, better or would it be preferable to be less than that?"
"880","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-03 13:53:51","Ah flip! Thought I got them things! Fixed in 54ee72470bad0eb72468fa06db39eb084c9a3f44"
"881","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-03 13:55:07","I think 10 milliseconds are fast enough :smile:"
"882","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-05 21:07:01","We use 2-space indents, not 4-space indents. See `CONTRIBUTING.md`"
"883","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-05 21:07:37","This comment is about the `opacity` and so should be on the same line as it"
"884","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-05 21:09:50","Regarding why these are single-liners, see http://codeguide.co/#css-single-declarations"
"885","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-07 17:36:05","i think something like `elRect = $.extend({}, elRect, { width: ��� height ���}` would look a bit cleaner"
"886","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-07 18:09:45","Sounds slower, but, alrighty."
"887","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-07 21:08:14","Maybe make this a class method instead of a private function in case people want to override it?"
"888","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-07 21:08:40","You can combine this if statement with the one below."
"889","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-07 21:09:40","Have you consider using `!$(content).parent().is($element)` here?"
"890","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-08 01:21:12","Perhaps we could make this a regular paragraph in the docs instead of a callout? We probably have too many callouts already. Also, not sure this belongs under the ""Via data attributes"" section."
"891","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-08 07:29:25","I've implemented your other suggestion but don't know what you mean here"
"892","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-08 08:09:20","regarding the callout, I did this for consistency with the ""Make modals accessible"" callout in the modals documentation, which is then pulled together on this same docs page http://getbootstrap.com/javascript/#modals-examples agree that the ""Via data attributes"" section wasn't the most obvious fit - I've moved it under the ""Examples"" section, just before ""Usage"", again to keep it consistent with how it's done on the modals part of the docs. Yes, ""Examples"" is an `h2` and my ""Make expand/collapse controls accessible"" heading is an `h4`, but again this is for consistency, and has no real negative impact (even in terms of accessibility/screen reader users navigating the docs)."
"893","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-08 08:17:17","These three rules don't follow our formatting guidelines (property order and spacing). See https://github.com/twbs/bootstrap/blob/master/CONTRIBUTING.md#code-guidelines and http://codeguide.co."
"894","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-08 13:02:37","This is what I meant: ```js if (html && !$element.is($(content).parent())) { $element.append(content) } else { $element.text($(content).text()) } ```"
"895","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-08 13:03:27","Why change `typeof content == 'string'` to this?"
"896","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-08 15:54:59","To branch correctly to `else` on Date, Number, null, or anything else that's not a string but not quite an object that may be passed here."
"897","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-08 15:55:37","This does not do the same thing if html is true and content has already been appended"
"898","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-08 16:03:12","Hmm, maybe use `content.nodeType || content.jquery` instead?"
"899","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-08 16:04:30","Ah, yes, sorry, my mistake."
"900","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-08 16:41:29","Yes, that is better, thanks"
"901","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-08 17:47:15","For some reason I didn't think about this earlier, but this seems rather fragile and too specific. Using a fixed value won't work for anyone who customizes the `padding`, `font-size`, etc."
"902","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-08 19:10:29","Size variation can be implemented using: ``` (@padding-base-horizontal * 2 + @font-size-base + 2px) /* 2px from .caret*/ ```"
"903","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-08 19:42:08","Why also include margin?"
"904","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-08 22:15:10","Perhaps do this after the `href` checks, since `:visible` is expensive?"
"905","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-08 22:17:50","Good call."
"906","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-09 05:53:24","Would `aria-expanded` be more appropriate?"
"907","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-09 05:57:40","@mdo Ping. ^^"
"908","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-09 06:48:53","Following the WAI-ARIA Authoring Practices, `aria-selected` is the proper state to communicate selection on the role of `tab`"
"909","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-21 00:06:32","Should be tooltipScope"
"910","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-21 00:07:06","Should be using clone function"
"911","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-25 21:40:48","perhaps we should make `accordion` an `id` instead of a `class`"
"912","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-25 21:42:38","Yeah, that's what I was thinking at first too but the whole unit test is about this group not having an ID but a class."
"913","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-09-25 22:08:20","Ah. Nevermind then."
"914","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-02 09:00:47","For clarity, I would suggest using the phrasing of the existing note."
"915","https://github.com/janrain/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-02 21:51:06","Should we give this color a name?"
"916","https://github.com/janrain/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-02 22:25:45","@thanj, is there a name for this color? I only know it as ""Janrain body color""."
"917","https://github.com/janrain/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-02 22:46:23","I'm not sure. light-sky was left over from a set of metaphors I was playing with while naming quilt colors: sky = background, rivers = navigation, slate = structure, etc. I'm not using those naming conventions anymore, since they didn't fit the new brand colors the same way they did the old ones. That hex code doesn't match anything I can find defined anywhere. Where did you pick that from? I have a slightly darker background color: #F4EFE6 for page background and a slightly lighter one: #F6F5F2, for highlight areas."
"918","https://github.com/janrain/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-02 22:56:48","Oh, weird. I took it from the screenshot. Maybe it was a JPEG encoding issue. We need to fix this. On Thu, Oct 2, 2014 at 3:46 PM, Nathaniel Taintor <notifications@github.com> wrote: > In sass/variables.scss: > > > @@ -65,7 +65,7 @@ $brand-info: $gray-light !default; > > // Scaffolding > > // ------------------------- > > > > -$body-bg: $light-sky !default; > > +$body-bg: #f3f2ed !default; > > I'm not sure. light-sky was left over from a set of metaphors I was > playing with while naming quilt colors: sky = background, rivers = > navigation, slate = structure, etc. I'm not using those naming conventions > anymore, since they didn't fit the new brand colors the same way they did > the old ones. > > That hex code doesn't match anything I can find defined anywhere. Where > did you pick that from? I have a slightly darker background color: #F4EFE6 > for page background and a slightly lighter one: #F6F5F2, for highlight > areas. > > ��� > Reply to this email directly or view it on GitHub > <https://github.com/janrain/bootstrap/pull/13/files#r18372869>. >"
"919","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-03 03:57:52","Why switch to `keyCode` from `which`? I mean, `keyCode` should always be defined on a `keydown` event but `which` is normalized by jQuery."
"920","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-03 04:07:34","i just wanted it to be consistent��� seemed ghetto to check for keyCode, then check for which below"
"921","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-03 04:10:02","Makes sense."
"922","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-03 05:46:25","why rename element?"
"923","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-03 05:47:50","Because this line ```js $(this.options.trigger || '[data-toggle=""collapse""]').filter('[href=""#' + el.id + '""], [data-target=""#' + el.id + '""]') ``` would be considerable longer if the argument were named `element`."
"924","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-03 05:49:20","why didn't you put addAriaAndCollapsedClass on the class?"
"925","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-03 05:51:58","I classified it as a utility function and followed the lead of the dropdown plugin, see https://github.com/twbs/bootstrap/blob/f75fc324622df92ffb0edef30dc87536dfba0b26/js/dropdown.js#L108-L119. I can make it an instance method, if you want me to."
"926","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-03 05:56:00","it would be awesome to define this method the exact same way and include it in all the classes that use this pattern����� so at least gzip could be super effective - thoughts?"
"927","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-03 05:56:15","until we figure out some sort of better way to share the method (util, etc.)"
"928","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-03 05:56:30","maybe don't have to worry about it now"
"929","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-03 05:57:59","Yeah, that sounds like something for v4."
"930","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-03 05:58:17","i kinda would like to see this in a method like this.getParent() to keep the constructor simple"
"931","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-03 06:15:22","@fat Is this what you meant?"
"932","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-06 07:24:32","How about 601 + slides.length? And could you add a comment here stating that this is to get around the broken image on placekitten?"
"933","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-07 04:39:26","Please use four spaces for indentation in front of these pluses."
"934","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-07 04:39:40","Only two space indentation here, please."
"935","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-07 04:42:07","The `height` declaration lacks a semicolon and a space after the colon."
"936","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-07 04:53:12","I copied four space indentation from [these lines](https://github.com/twbs/bootstrap/blob/master/js/tests/unit/scrollspy.js#L79-L82). Should I also fix them?"
"937","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-07 04:55:38","Nah, I'll just do it in master real quick."
"938","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-07 04:58:10","See https://github.com/twbs/bootstrap/commit/61705d35fa314a16579169fb7379e5101716e715, thanks for pointing it out!"
"939","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-07 04:58:21",":+1:"
"940","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-09 17:20:35","![](http://i.imgur.com/8vcBhYZ.gif)"
"941","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-09 17:34:12","What's wrong with `$(window).scrollTop()`?"
"942","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-09 17:36:23","@hnrch02 good question, I wish there was a (facepalm) emoji on GH"
"943","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-10 06:46:39","Please adjust the spacing so that the operators remain vertically aligned, like they were in the old version."
"944","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-10 15:07:46","Actually, you no longer need to indent these equals signs."
"945","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-10 15:11:49","@hnrch02 Do you want to me to undo them? Or leave as is? Any particular reason for this?"
"946","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-10 15:17:50","Yeah, the equals signs should line up with one another but at maximally one space after the longest variable name of the block. ```js var foobar = 0 var foo = 1 var i = 2 var bar = 3 ```"
"947","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-10 15:21:23","@hnrch02 Make sense! I'll undo and keep them all at one space"
"948","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-11 09:56:04","You forgot to remove the open brace here."
"949","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-11 16:31:39","MPEG4 and HTML5 audio + (experimental) RTMP, providing reliable cross-browser/platform audio control in as little as 10 KB."
"950","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-11 21:14:43","""shown.."" => ""shown."""
"951","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-12 10:39:14","0f1d1f1045810b1582656b5856a55dac4f49df51"
"952","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-12 10:39:22","0f1d1f1045810b1582656b5856a55dac4f49df51"
"953","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-12 10:39:28","0f1d1f1045810b1582656b5856a55dac4f49df51"
"954","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-12 10:39:33","0f1d1f1045810b1582656b5856a55dac4f49df51"
"955","https://github.com/nette/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-12 22:43:40","Really?"
"956","https://github.com/nette/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-12 23:00:55","Fuck :) Doing 10 thinks at once is not good."
"957","https://github.com/janrain/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-16 00:04:35","Does this work now that `variables` has been renamed `_variables`?"
"958","https://github.com/janrain/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-16 00:06:55","Yeah, Sass finds @import files with or without the underscore prefix. The underscore prefix just makes it not try to generate a css file for each of these partials."
"959","https://github.com/janrain/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-16 00:08:15","(sorry, guy whose handle is at-import... haha)"
"960","https://github.com/janrain/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-16 20:26:19","TIL. cool."
"961","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-18 09:14:09","I think parens are needed around the expression for this to work with Less's strictMath option."
"962","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-20 07:45:08","May want to do this via scope.$evalAsync ."
"963","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-20 07:45:17","Should be a `one` method."
"964","https://github.com/janrain/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-20 22:26:44","PHP?!"
"965","https://github.com/janrain/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-20 22:31:06","Haha. The only working code examples I found for creating an ASE file were in PHP and Actionscript. Woudl you rather have had actionscript? This file probably doesn't even need to be in here - I didn't make a grunt task out of it, and right now the vars are hardcoded here rather than pulling from the Sass variables files. I just wanted to show my work, though,so that if the colors change I can update the swatch palette file."
"966","https://github.com/janrain/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-20 23:20:53","I can definitely get behind PHP over ActionScript, hahah. I'm fine with it."
"967","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-22 11:07:20","I'm not sure about this change. The rest LGTM."
"968","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-22 11:08:17","This is needed here. Please revert the changes in sitemap.xml."
"969","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-22 11:28:43","done"
"970","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-22 11:56:20","I can revert it if you want.. but this is how it sorted it.."
"971","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-22 11:59:08","Personally, I'd keep it as it was to be honest..."
"972","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-22 22:21:15","Perhaps we could bump the minimum jQuery to 1.9.1 to avoid the RC/Beta complications?"
"973","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-24 19:38:06","Aside from the alignment for the legacy `.media > .pull-left`, none of this needs to be nested under `.media`. The `.media`, `.media-right`, `.media-body`, etc can all be top level selectors here to avoid unnecessary specificity."
"974","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-24 19:39:23","Instead of replacing all four values, can you do something like: ```css margin-top: 0; margin-bottom: 5px; ``` That way we know we're explicitly overriding a couple of values, and not all four of the `margin` directions."
"975","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-24 22:55:51","Why not just do it like this? ```less .glyphicon-euro, .glyphicon-eur { &:before { content: ""\20ac""; } } ```"
"976","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-24 23:18:34","You're right.. fixed.."
"977","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-26 04:58:16","`position` should come before `display`"
"978","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-26 04:58:23","`position` should come before `top`"
"979","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-26 04:58:39","`top` goes before `left` (top, right, bottom, left)."
"980","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-26 04:59:40","If the question is toggling between some clipping or none at all, I'm sure an `auto` value can disable the clipping."
"981","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-26 08:45:38","typo in both HTML and JS: aniamted"
"982","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-26 16:28:21","Should have drunken more coffee."
"983","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-26 19:51:49",":D No worries, caffeinated or not, everybody makes a typo from time to time."
"984","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-27 22:38:02","Use modulo instead of a conditional?"
"985","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-28 19:07:55","why isn't `'[data-toggle=""collapse""]'` just the default value for the trigger option?"
"986","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-28 19:10:07","ya"
"987","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-29 05:42:26","add similar comment here for good measure?"
"988","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-29 05:45:17","I don't think it's needed here."
"989","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-30 04:00:22","I'm not a fan of making the `<div>` using jQuery since it's probably way slower."
"990","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-30 04:04:40","Good point."
"991","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-30 16:29:52","We still support IE 8, so we need to stick with jQuery 1.x"
"992","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-30 17:03:07","Okay, but wouldn't that throw an error according to #14852?"
"993","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-30 17:12:05","No. #14852 enforces jQuery>=1.9.1"
"994","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-30 17:13:41","Oh snap. Wonder if we have any other rogue `v3.2.1` references..."
"995","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-30 17:19:23","This seems to be the only one; I did a search."
"996","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-30 17:46:18","<3"
"997","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-30 17:59:15","I feel like I'm missing something here :( 1.11.1 isn't really >=1.9.1. Shouldn't the template still be changed to 1.9.1?"
"998","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-30 18:06:39","11 > 9 1.11.1 is greater than 1.9.1 when compared via [SemVer](http://semver.org/), which #14852 basically does. jQuery 1.9.1 is the minimum required version, but unless there's a jQuery-version-related bug in another library someone is using, there's no reason not to use to the latest 1.x jQuery, which is 1.11.1."
"999","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-10-30 18:08:40","Got it. Thanks for clarifiying!"
"1000","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-02 21:51:52","I think it's safer and more consistent to do same check as above (on line 60, to check whether the attrs expression is truthy/not empty) as that would work with any falsey value."
"1001","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-03 09:50:46","Is there any reason this if statement was moved from the restartTimer above? This was meant to check that the interval created makes sense, it seems unsafe to remove it from line 109. An additional check here may make sense, but I think it should also still be left intact above."
"1002","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-03 09:51:30","Should use `scope.interval` here instead of the value 2000."
"1003","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-03 17:11:21","See #14982."
"1004","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-03 21:03:06","We need this to be outside of `/docs/` or it'll break when calling Grunt from a Bower install. Move it to `/grunt/` probably?"
"1005","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-03 21:05:06","Use `grunt.file.readJSON`"
"1006","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-03 21:08:34","I copied this from isEditable on line 50 which is also default-true. Line 60 for appendToBody is default-false. If you prefer different style for default-true attributes, I would suggest updating both isEditable and focusFirst, but I think that's outside of the scope of this pull request."
"1007","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 00:15:00","Add a dot to the class reference: `.sr-only`"
"1008","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 00:28:29","Yeah, the WET folks were aware of the button contrast issue ( https://github.com/wet-boew/wet-boew/issues/4463#issuecomment-35144829 ), but never pursued it upstream..."
"1009","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 00:35:15","i've had a play with getting darker shades of color, but sadly - if using white text - they all start looking rather dull. switching to black text solves the contrast issue, but again misses out on some visual pop. i'd say it could be left as a note, but defaults can remain as they are (controversial i know ;) )"
"1010","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 01:04:52","done https://github.com/twbs/bootstrap/commit/2eb04f0563850e7ca78f2124eed82df63d0f7598"
"1011","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 06:31:13","Not sure Jekyll can access it from there?"
"1012","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 06:35:29","I could move it there, then we'd need to copy it somehow to the `_data` directory with grunt."
"1013","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 08:06:44","Well, adding a copy task seems preferable to dealing with legit Bower user complaints, IMHO."
"1014","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 08:58:57","_$timeout_ can be removed."
"1015","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 09:03:18","I see, in that case this is fine."
"1016","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 09:06:33","For readability, could you break this up to multiple lines since you're modifying this line?"
"1017","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 09:16:39","Since you're changing this line, could you break this into multiple lines for readability?"
"1018","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 09:17:30","Missing a test for when pressing enter or tab when `activeIdx == -1`, nothing should happen and nothing should be selected."
"1019","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 18:30:08","This test now needs `$interval.flush(5000);` here to actually test these values. I found that this actually causes the test to fail on $interval function because it's calling $interval with `false` as the timeout."
"1020","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 18:30:40","Also needs `$interval.flush(5000)` here since $interval doesn't throw an exception if there are not tasks."
"1021","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 18:32:53","Firstly, there's an extra space on the right, right before the opening brace. Secondly, this also needs to do `interval > 0` now since $interval(fn, 0) creates an infinite loop."
"1022","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 18:34:02","I was experimenting with this check earlier, I think removing it should be okay. Did you experience a bug after removing this?"
"1023","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 18:36:24","I think this should do `spyOn(...).andCallThrough()`, otherwise, `cancel` isn't actually called."
"1024","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 22:10:59","why not null?"
"1025","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 22:11:12","Ah, yes, I realized that at some point to when I started working on #14933."
"1026","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 22:12:23","Because jQuery doesn't fail if it operates on an empty set. I didn't have the backdrop guards at first so `setBackdropHeight` was called and it threw because it was null."
"1027","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 22:15:17","ah ok, unnecessary now though, yeah?"
"1028","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-04 22:16:16","Yup."
"1029","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-05 00:02:34","dont need toUpperCase"
"1030","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-05 00:02:40","don't need this line"
"1031","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-05 00:03:38","i would maybe just change this to ``` if (/INPUT|TEXTAREA/.test(e.target.tagName)) return ```"
"1032","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-08 23:31:33","Shouldn't it be `$interval.flush(1000)`? Looking at it more closely I don't get why here we use $apply here to set scope.interval value and it's directly modified on the last test as `scope.interval = 2000;`"
"1033","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-08 23:39:39","Can you be more clear about this? I'm not sure how this assertion was useful before, ""don't change slide when the interval is invalid"" without running timeout flush seems like an obvious truth."
"1034","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-09 01:26:26","Indeed, previously it wasnt doing the right thing because it should've been flushing the timeout but catching the exception. What I meant is that there should be a flush here for the interval service so that it's actually a useful assertion."
"1035","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-09 07:59:53","Great, I think I understood it, I changed it to make that test useful."
"1036","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-09 10:02:10","One more flush missing, there should be an `$interval.flush(scope.interval);` here."
"1037","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-11 06:33:35","Add a space before the `<span>` or break this into new lines."
"1038","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-11 06:33:40","Add a space before the `<span>` or break this into new lines."
"1039","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-11 06:33:46","Add a space before the `<span>` or break this into new lines."
"1040","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-11 08:23:59","I had left them out for fear of potential layout disruption (e.g. that it would mess up centering of the text), but if it's unaffected, yay :)"
"1041","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-11 19:41:23","Should this be `prev` instead?"
"1042","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-11 19:42:54","I'm not sure about relying on the scope hierarchy (`$$childHead`) here. How about searching through the `slides` array and finding a matching slide with `slide.$element === element` ?"
"1043","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-12 22:39:28","these CSS properties should be indented another level"
"1044","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-12 22:39:37","spaces after colons please"
"1045","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-14 21:01:20","Why highlight this as HTML when it's JavaScript?"
"1046","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-14 22:34:13","""use some custom JavaScript"""
"1047","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-16 17:13:58","Any reason for the strict comparison here?"
"1048","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-16 17:36:06","The JSCS check complains otherwise."
"1049","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-16 17:37:07","I guess because of `false == 0`. Never mind then."
"1050","https://github.com/nette/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-17 22:45:56","Wrong indent."
"1051","https://github.com/nette/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-18 00:18:10","I still don't like this. It's prone to errors. If you make a typo in your config you might get really wild results."
"1052","https://github.com/nette/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-18 16:34:55","`Nette\Forms\Validator::$messages[?] = ?` seems better"
"1053","https://github.com/nette/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-18 16:51:34","Looks better, but namespace will beescaped and it won't work"
"1054","https://github.com/nette/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-18 16:56:06","Eh? I dont understand���"
"1055","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-20 18:41:32","""JavaScript pull requests"" seems redundant the second time."
"1056","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-20 18:59:48","Fixed."
"1057","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-21 07:10:11","grammar problem: ""should not be adjust position"" [sic]"
"1058","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-21 07:13:39","Based on the Sauce unit test failures, seems like you should `Math.round()` these"
"1059","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-21 07:14:10","Should be just `initialTop` instead of `$initialTop` since it's not a jQuery object?"
"1060","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-24 18:54:40","remove debug code please"
"1061","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-24 18:56:14","Per [Bootstrap/Jacob's JS coding style](https://github.com/twbs/bootstrap/blob/master/CONTRIBUTING.md#js), please remove the semicolons"
"1062","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-24 18:59:02","Please don't make unrelated indentation changes like this."
"1063","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-11-24 23:46:38","semicolon seems unnecessary?"
"1064","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-02 21:08:24","Might as well just `calcIndex(1)` and remove the `|| 1` above."
"1065","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-02 21:10:58","Why `.html()` and not `.text()`?"
"1066","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-03 06:14:54","Noted."
"1067","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-03 06:15:03","Noted"
"1068","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-04 08:10:48","You need to call `start()` after this."
"1069","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-04 08:12:37","Do the `hide` call in a callback for the `shown.bs.modal` event."
"1070","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-04 09:14:23","Tweak the indentation so it's consistent with the other tests."
"1071","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-04 09:37:42","Indentation seems to has been changed a little by the github online editor :("
"1072","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-04 22:24:36","I'm not sure about this; this means it will report much less helpful line numbers for the locations of errors."
"1073","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-04 22:34:43","Ah, that's a very valid concern. I've run into these validation reports a lot as I write new docs sections."
"1074","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-05 19:42:15","Please remove this unrelated change."
"1075","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-07 18:09:45","Why not just change this from a div to a nav?"
"1076","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-08 16:03:24","Might not want to drop the variable declaration right away. Users of the Less files may rely on it for whatever reason, so it'd need time to deprecate. Not using it internally would suffice I think."
"1077","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-08 18:16:35","Yeah, add a comment about it being deprecated (see the `@screen-*` variables for examples), but don't delete it."
"1078","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-09 01:30:30","Perhaps add ```jade - var helpId = ""help-block-"" + variable.name ``` And then refer to `helpId`, to avoid the repetition. (See http://jade-lang.com/reference/code/ for description of `- JS_stmt_here` syntax)"
"1079","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-09 09:58:33","Good catch...kept it DRY"
"1080","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-10 07:06:49","Due to backward compatibility constraints, I don't think we can delete methods, but eliminating all calls to them is probably fine."
"1081","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-12 09:42:43","There's no need to change the while loop logic once the first week number (`weekNumber`) is determined correctly."
"1082","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-12 09:45:49","Instead of using the middle of the row (3), we should really be using the week number of the Monday on that row. How about looping through the first row to find the Monday on that row, and then get it's week number instead? That way, if somebody sets `starting-day=5` so that it's `T F S S M T W`, it won't get the week number of the Sunday and would get the week number of the Monday on that row. I think that's more expected and closer to the specification."
"1083","https://github.com/angular-ui/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-12 10:27:03","I think this shoudl be `[0-2]?` instead since we're not allowing `012/11/2013`."
"1084","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-14 20:10:12","Use `0` over `none` for zero values."
"1085","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-14 20:10:13","Let's get a class here instead of the `span`, please."
"1086","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-16 03:43:04","Considering that only the Core Team would ever run this task, I think we can just omit this and instead put a comment about it requiring meteor to be installed."
"1087","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-16 03:45:41","`dist` is meant for use by regular Bootstrap users, so publishing shouldn't be part of this."
"1088","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-16 03:47:21","Use Grunt's `clean` task instead?"
"1089","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-16 03:48:40","?"
"1090","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-16 03:55:21","Can we use globs here?"
"1091","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-16 03:55:39","Missing `.woff2`"
"1092","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-16 09:07:40","There's an [active proposal](https://github.com/MeteorCommunity/discussions/issues/7) for globs in `api.addFiles()`; hopefully we'll be able to soon."
"1093","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-16 09:26:33","That would be pre-accepting the PR. Changing to `twbs/bootstrap`."
"1094","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-16 09:51:21","Moving to .travis.yml so CI tests can include the Meteor integration."
"1095","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-16 09:53:41","Removed. Where should be the `meteorPublish` task be included?"
"1096","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-16 14:09:14","Why was `bottom: 0` removed? It results in the modal's backdrop having height 0 and thus not being displayed for me."
"1097","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-16 22:07:50","Same issue here +1"
"1098","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-18 05:07:09","Nowhere. But we have a checklist that defines the steps in our release process. We would add `grunt meteorPublish` to that checklist if this PR gets accepted."
"1099","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-18 05:18:16","Hmm, this might screw with our dependency caching. Will have to investigate a bit."
"1100","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-18 05:21:10","Could we just add some of this info to the existing Getting Started docs, and then kill this file?"
"1101","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-18 05:22:01","capitalize Glyphicons"
"1102","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-18 05:22:49","Path seems invalid?"
"1103","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-18 05:23:43","Remove superfluous comment"
"1104","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-18 05:27:18","This seems unnecessary since you're already adding `spacejam` to `devDependencies` in `package.json`"
"1105","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-19 00:46:26","""No semicolons"" is a rather unique coding style."
"1106","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-19 00:47:26","""No semicolons"" is a rather unique coding style, which [conflicts with the Meteor style guide](https://github.com/meteor/meteor/wiki/Meteor-Style-Guide), so I added a mention for future Meteor package maintainers to no start adding semicolons."
"1107","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-19 01:07:09","There's been extended discussion about integrating Bootstrap with Meteor, so I felt that a level of Meteor-specific detail is necessary, hence a separate README. This Meteor-specific README file is also referenced by the `readme` key in [the Meteor `package.js` file](https://github.com/twbs/bootstrap/pull/15376#discussion_r22024110) (I've fixed the path there; it would become valid after the merge, but for now, I've set it to the fork's README). If you'd like to kill it, I could submit a PR against [the Getting Started doc](https://github.com/twbs/bootstrap/blob/gh-pages/getting-started/index.html), and perhaps link to it from the main README? Atmosphere packages must show a README, so if it's not the Meteor-specific one, it would have to be the main README."
"1108","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-19 01:29:52","Not clear what ""this repo"" refers to."
"1109","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-19 01:30:49","The DONE & TODO sections don't seem appropriate in a user-facing document. (And there's only 1 TODO item anyway.)"
"1110","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-19 01:33:08","I'm not sure we want to favor/endorse any particular third-party projects (Font Awesome, bootstrap-material-design) by mentioning them like this. @mdo Thoughts?"
"1111","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-19 01:37:48","This sentence seems unnecessary since it will be in the repo if this PR is accepted."
"1112","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-19 01:44:45","Fair enough."
"1113","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-19 02:30:11","Sending a revamped README in a bit."
"1114","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-29 00:13:58","See #15314."
"1115","https://github.com/twbs/bootstrap","bootstrap","PullRequestReviewCommentEvent","2014-12-30 13:31:35","You will make it smaller @line-height-small"
